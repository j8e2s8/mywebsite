---
title: "columns2"
author: "정은서"
editor: visual
jupyter: python3
---
```{python}
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import seaborn as sns

# 데이터 불러오기
train_df = pd.read_csv('../../../lsbigdata-project1/house price/train.csv')
test_df = pd.read_csv('../../../lsbigdata-project1/house price/test.csv')
submission = pd.read_csv('../../../lsbigdata-project1/house price/sample_submission.csv')
```

함수
```{python}
WxColourDB = ['black', 'red', 'chocolate','darkorange','darkgoldenrod','olive','plum','lightslategrey','forestgreen','gold','lightseagreen','fuchsia','deepskyblue','slateblue','mediumorchid','navy','hotpink','plum','lightsteelblue','blue','darkturquoise','cyan','green','yellow','darkkhaki','orange']
                              
def train_cat_rel_cxy(col1, col2):  # col1 : 범주, col2:범주
    plt.clf()
    plt.rcParams['font.family'] = 'Malgun Gothic'
    plt.rcParams['axes.unicode_minus'] = False
    a = col1 + "의" + col2 + "범주별 SalePrice와의 관계 비교"
    plt.title(a)
    plt.tight_layout()
    cats = train_df[col2].value_counts().sort_values(ascending=False).index
    
    for i in range(len(cats)):
        a = train_df[train_df[col2]==cats[i]][[col1,'SalePrice']]
        n = np.random.choice(np.arange(len(WxColourDB)),len(WxColourDB),replace=False)
        n = n.tolist()[i]
        sns.scatterplot(data=a, x=col1, y='SalePrice', color=WxColourDB[n])  # 색 달라져야함
        plt.show()
```


각 지역별 확인
```{python}
WxColourDB = ['black', 'red', 'chocolate','darkorange','darkgoldenrod','olive','plum','lightslategrey','forestgreen','gold','lightseagreen','fuchsia','deepskyblue','slateblue','mediumorchid','navy','hotpink','plum','lightsteelblue','blue','darkturquoise','cyan','green','yellow','darkkhaki','orange']

cats = train_df['Neighborhood'].value_counts().sort_values(ascending=False).index
for i in range(len(cats)):
        plt.clf()
        plt.rcParams['font.family'] = 'Malgun Gothic'
        plt.rcParams['axes.unicode_minus'] = False
        a = "Neighborhood '" + cats[i] +"' 지역의 MSSubClass과 SalePrice 관계"
        plt.title(a)
        plt.ylim([0,800000])
        plt.xlim([15,195])
        plt.tight_layout()
        a = train_df[train_df['Neighborhood']==cats[i]][['MSSubClass','SalePrice']]
        n = np.random.choice(np.arange(len(WxColourDB)),len(WxColourDB),replace=False)
        n = n.tolist()[i]
        sns.scatterplot(data=a, x='MSSubClass', y='SalePrice', color=WxColourDB[n])  # 색 달라져야함
        plt.show()
```


누적으로 확인
```{python}
train_cat_rel_cxy('MSSubClass', 'Neighborhood')  # col1 : 범주, col2:범주
```
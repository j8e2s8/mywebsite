[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "만두만두",
    "section": "",
    "text": "안녕하세요, 데이터 분석 만두만두입니다."
  },
  {
    "objectID": "index.html#홈페이지-첫-화면입니다",
    "href": "index.html#홈페이지-첫-화면입니다",
    "title": "만두만두",
    "section": "",
    "text": "안녕하세요, 데이터 분석 만두만두입니다."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                   '가격' : [1800, 1500, 3000],\n                   '판매량' : [24,38,13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "about.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "about.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                   '가격' : [1800, 1500, 3000],\n                   '판매량' : [24,38,13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "about.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "about.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "hw1",
    "section": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nimport numpy as np\n\n# 가격 평균\nprint(\"가격 평균 : \",np.mean(df['가격']))\n\n#판매량 평균\nprint(\"판매량 평균 : \",np.mean(df['판매량']))\n\n가격 평균 :  2100.0\n판매량 평균 :  25.0"
  },
  {
    "objectID": "about.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "href": "about.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "title": "hw1",
    "section": "mpg 데이터를 불러와 복사본을 만드세요.",
    "text": "mpg 데이터를 불러와 복사본을 만드세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\n\ndf_copy = df.copy()\ndf_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "about.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "about.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "hw1",
    "section": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\ndf_copy=df_copy.rename(columns={'cty' : 'city', 'hwy' : 'highway'})\ndf_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "about.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "href": "about.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "title": "hw1",
    "section": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.",
    "text": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\ndf_copy.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "about.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "about.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "hw1",
    "section": "midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nimport pandas as pd\n\nmidwest = pd.read_csv('midwest.csv')\nmidwest.head()\n\n#pd.set_option('display.max_columns', None)\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n결측치가 하나도 없는 데이터이다. 범주 컬럼은 3개이고, 그 외에는 다 수치컬럼이다."
  },
  {
    "objectID": "about.html#poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정",
    "href": "about.html#poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정",
    "title": "hw1",
    "section": "poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정",
    "text": "poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정\n\nmidwest = midwest.rename(columns = {'poptotal' : 'total', 'popasian' : 'asian'})\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns"
  },
  {
    "objectID": "about.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "href": "about.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "title": "hw1",
    "section": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.",
    "text": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nmidwest['pct'] = (midwest['asian']/midwest['total'])*100\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npct\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\nimport matplotlib.pyplot as plt\n\nplt.clf()\nmidwest['pct'].plot.hist()\nplt.show()"
  },
  {
    "objectID": "about.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "href": "about.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "title": "hw1",
    "section": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.",
    "text": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nimport numpy as np\n\nprint( \"아시아 인구 백분율 전체 평균 :\",np.mean(midwest['pct']) )\n\n아시아 인구 백분율 전체 평균 : 0.4872461834357345\n\n\n\nmidwest['size'] = np.where(midwest['pct'] &gt; np.mean(midwest['pct']) , 'large', 'small')\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npct\nsize\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n\n\n5 rows × 30 columns"
  },
  {
    "objectID": "about.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "about.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "hw1",
    "section": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nplt.clf()\nmidwest['size'].value_counts().plot.bar(rot=0)\nplt.show()"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "hw1",
    "section": "",
    "text": "24.07.15"
  },
  {
    "objectID": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.",
    "text": "다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.\n\nimport pandas as pd\n\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                   '가격' : [1800, 1500, 3000],\n                   '판매량' : [24,38,13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "hw1.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "hw1.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "hw1",
    "section": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nimport numpy as np\n\n# 가격 평균\nprint(\"가격 평균 : \",np.mean(df['가격']))\n\n#판매량 평균\nprint(\"판매량 평균 : \",np.mean(df['판매량']))\n\n가격 평균 :  2100.0\n판매량 평균 :  25.0"
  },
  {
    "objectID": "hw1.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "href": "hw1.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "title": "hw1",
    "section": "mpg 데이터를 불러와 복사본을 만드세요.",
    "text": "mpg 데이터를 불러와 복사본을 만드세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\n\ndf_copy = df.copy()\ndf_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw1.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "hw1.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "hw1",
    "section": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\ndf_copy=df_copy.rename(columns={'cty' : 'city', 'hwy' : 'highway'})\ndf_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw1.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "href": "hw1.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "title": "hw1",
    "section": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.",
    "text": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\ndf_copy.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw1.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "hw1.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "hw1",
    "section": "midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nimport pandas as pd\n\nmidwest = pd.read_csv('midwest.csv')\nmidwest.head()\n\n#pd.set_option('display.max_columns', None)\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n결측치가 하나도 없는 데이터이다. 범주 컬럼은 3개이고, 그 외에는 다 수치컬럼이다."
  },
  {
    "objectID": "hw1.html#poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정",
    "href": "hw1.html#poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정",
    "title": "hw1",
    "section": "poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정",
    "text": "poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정\n\nmidwest = midwest.rename(columns = {'poptotal' : 'total', 'popasian' : 'asian'})\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns"
  },
  {
    "objectID": "hw1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "href": "hw1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "title": "hw1",
    "section": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.",
    "text": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nmidwest['pct'] = (midwest['asian']/midwest['total'])*100\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npct\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\nimport matplotlib.pyplot as plt\n\nplt.clf()\nmidwest['pct'].plot.hist()\nplt.show()"
  },
  {
    "objectID": "hw1.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "href": "hw1.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "title": "hw1",
    "section": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.",
    "text": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nimport numpy as np\n\nprint( \"아시아 인구 백분율 전체 평균 :\",np.mean(midwest['pct']) )\n\n아시아 인구 백분율 전체 평균 : 0.4872461834357345\n\n\n\nmidwest['size'] = np.where(midwest['pct'] &gt; np.mean(midwest['pct']) , 'large', 'small')\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npct\nsize\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n\n\n5 rows × 30 columns"
  },
  {
    "objectID": "hw1.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "hw1.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "hw1",
    "section": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nplt.clf()\nmidwest['size'].value_counts().plot.bar(rot=0)\nplt.show()"
  },
  {
    "objectID": "hw2.html",
    "href": "hw2.html",
    "title": "hw2",
    "section": "",
    "text": "24.07.16"
  },
  {
    "objectID": "hw2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.",
    "href": "hw2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.",
    "title": "hw2",
    "section": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다.",
    "text": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다."
  },
  {
    "objectID": "hw2.html#displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "hw2.html#displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "hw2",
    "section": "displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.",
    "text": "displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\nimport numpy as np\ndf = pd.read_csv('mpg.csv')\npd.set_option('display.max_columns', None)\n\ndf.assign(type = np.where(df['displ']&lt;=4, '4이하', np.where(df['displ']&gt;=5, '5이상', '기타'))).groupby('type').agg(type_mean = ('hwy','mean'))\n\n\n\n\n\n\n\n\ntype_mean\n\n\ntype\n\n\n\n\n\n4이하\n25.963190\n\n\n5이상\n18.078947\n\n\n기타\n17.151515\n\n\n\n\n\n\n\n4이하 가 5이상보다 평균이 높다는 것을 알 수 있다.\n\n다른 방법\n\nprint(\"4이하인 경우 평균 :\",df.query('displ &lt;= 4')['hwy'].mean())\nprint(\"5이상인 경우 평균 :\",df.query('displ &gt;=5')['hwy'].mean())\n\n4이하인 경우 평균 : 25.96319018404908\n5이상인 경우 평균 : 18.07894736842105"
  },
  {
    "objectID": "hw2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.",
    "href": "hw2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.",
    "title": "hw2",
    "section": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다.",
    "text": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다."
  },
  {
    "objectID": "hw2.html#audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시연비-평균이-더-높은지-알아보세요.",
    "href": "hw2.html#audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시연비-평균이-더-높은지-알아보세요.",
    "title": "hw2",
    "section": "‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시연비) 평균이 더 높은지 알아보세요.",
    "text": "‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시연비) 평균이 더 높은지 알아보세요.\n\ndf.groupby('manufacturer', as_index=False).agg(cty_mean = ('cty', 'mean')).query(\"manufacturer == 'audi' | manufacturer=='toyota'\")\n\n\n\n\n\n\n\n\nmanufacturer\ncty_mean\n\n\n\n\n0\naudi\n17.611111\n\n\n13\ntoyota\n18.529412\n\n\n\n\n\n\n\ntoyota 제조회사가 도시연비 평균이 더 높다.\n\n다른 방법\n\ndf.groupby('manufacturer', as_index=False).agg(cty_mean = ('cty', 'mean')).query(\"manufacturer in ['audi','toyota']\")\n\n\n\n\n\n\n\n\nmanufacturer\ncty_mean\n\n\n\n\n0\naudi\n17.611111\n\n\n13\ntoyota\n18.529412"
  },
  {
    "objectID": "hw2.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해-보세요.",
    "href": "hw2.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해-보세요.",
    "title": "hw2",
    "section": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.",
    "text": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\nprint(\"세 회사 데이터에 대한 hwy 전체 평균 :\",df.query(\"manufacturer in ['chevrolet','ford','honda']\")['hwy'].mean())\n\n세 회사 데이터에 대한 hwy 전체 평균 : 22.50943396226415"
  },
  {
    "objectID": "hw2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.",
    "href": "hw2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.",
    "title": "hw2",
    "section": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다.",
    "text": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다."
  },
  {
    "objectID": "hw2.html#audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "href": "hw2.html#audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "title": "hw2",
    "section": "’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.",
    "text": "’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nprint(\"=\"*70, \"\\n 1. audi 중 hwy가 높은 순의 자동차 모델 \\n\")\ndf.query('manufacturer == \"audi\"').groupby('model').agg(hwy_mean = ('hwy' , 'mean'))\nprint(\"\\n\",\"=\"*70, \"\\n 2. audi 중 hwy가 1~5위인 자동차 데이터 \\n\")\ndf.query('manufacturer == \"audi\"').sort_values('hwy', ascending=False).head(5)\n\n====================================================================== \n 1. audi 중 hwy가 높은 순의 자동차 모델 \n\n\n ====================================================================== \n 2. audi 중 hwy가 1~5위인 자동차 데이터 \n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "hw2.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "href": "hw2.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "title": "hw2",
    "section": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.",
    "text": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\nmpg = df.copy()\nmpg= mpg.assign(sum_cty_hwy = mpg['cty']+mpg['hwy'])\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum_cty_hwy\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42"
  },
  {
    "objectID": "hw2.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "href": "hw2.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "title": "hw2",
    "section": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.",
    "text": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.\n\nmpg = mpg.assign(avg_cty_hwy = mpg['sum_cty_hwy']/2)\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum_cty_hwy\navg_cty_hwy\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0"
  },
  {
    "objectID": "hw2.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "href": "hw2.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "title": "hw2",
    "section": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.",
    "text": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nmpg.sort_values('avg_cty_hwy', ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum_cty_hwy\navg_cty_hwy\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "hw2.html#번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "href": "hw2.html#번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "title": "hw2",
    "section": "1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.",
    "text": "1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.\n\ndf.assign(sum_cty_hwy = df['cty']+df['hwy']\n          , avg_cty_hwy = lambda x: x['sum_cty_hwy']/2) \\\n    .sort_values('avg_cty_hwy', ascending=False) \\\n    .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum_cty_hwy\navg_cty_hwy\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "hw2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "hw2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "hw2",
    "section": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.",
    "text": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\nimport numpy as np\ndf = pd.read_csv('mpg.csv')\npd.set_option('display.max_columns', None)\n\ndf.assign(type = np.where(df['displ']&lt;=4, '4이하', np.where(df['displ']&gt;=5, '5이상', '기타'))).groupby('type').agg(type_mean = ('hwy','mean'))\n\n\n\n\n\n\n\n\ntype_mean\n\n\ntype\n\n\n\n\n\n4이하\n25.963190\n\n\n5이상\n18.078947\n\n\n기타\n17.151515\n\n\n\n\n\n\n\n4이하 가 5이상보다 평균이 높다는 것을 알 수 있다.\n\n다른 방법\n\nprint(\"4이하인 경우 평균 :\",df.query('displ &lt;= 4')['hwy'].mean())\nprint(\"5이상인 경우 평균 :\",df.query('displ &gt;=5')['hwy'].mean())\n\n4이하인 경우 평균 : 25.96319018404908\n5이상인 경우 평균 : 18.07894736842105"
  },
  {
    "objectID": "hw2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시연비-평균이-더-높은지-알아보세요.",
    "href": "hw2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시연비-평균이-더-높은지-알아보세요.",
    "title": "hw2",
    "section": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시연비) 평균이 더 높은지 알아보세요.",
    "text": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시연비) 평균이 더 높은지 알아보세요.\n\ndf.groupby('manufacturer', as_index=False).agg(cty_mean = ('cty', 'mean')).query(\"manufacturer == 'audi' | manufacturer=='toyota'\")\n\n\n\n\n\n\n\n\nmanufacturer\ncty_mean\n\n\n\n\n0\naudi\n17.611111\n\n\n13\ntoyota\n18.529412\n\n\n\n\n\n\n\ntoyota 제조회사가 도시연비 평균이 더 높다.\n\n다른 방법\n\ndf.groupby('manufacturer', as_index=False).agg(cty_mean = ('cty', 'mean')).query(\"manufacturer in ['audi','toyota']\")\n\n\n\n\n\n\n\n\nmanufacturer\ncty_mean\n\n\n\n\n0\naudi\n17.611111\n\n\n13\ntoyota\n18.529412"
  },
  {
    "objectID": "hw2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "href": "hw2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "title": "hw2",
    "section": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.",
    "text": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nprint(\"=\"*70, \"\\n 1. audi 중 hwy가 높은 순의 자동차 모델 \\n\")\ndf.query('manufacturer == \"audi\"').groupby('model').agg(hwy_mean = ('hwy' , 'mean'))\nprint(\"\\n\",\"=\"*70, \"\\n 2. audi 중 hwy가 1~5위인 자동차 데이터 \\n\")\ndf.query('manufacturer == \"audi\"').sort_values('hwy', ascending=False).head(5)\n\n====================================================================== \n 1. audi 중 hwy가 높은 순의 자동차 모델 \n\n\n ====================================================================== \n 2. audi 중 hwy가 1~5위인 자동차 데이터 \n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "project1.html",
    "href": "project1.html",
    "title": "project1",
    "section": "",
    "text": "예전에는 전통시장을 가면 편의시설이 부족해서 접근성이 떨어졌는데, 요즘에는 편의시설을 개선하려는 노력을 기울이고 있다. 1. 와이파이 설치 2. 건강한 식재료 (백년초 국수 등 + 지역 특색) 3. 공산품이 아니라 정성이 들어간 음식들 4. 저렴한 가격 + 온누리 상품권 사용가능 5. 쇼핑 후 차 한 잔의 여유를 위한 여가 공간 구비 (카페 등) 6. 1인 가구를 위한 음식\n상품권 가맹점포 정보 https://www.sbiz.or.kr/sijangtong/nation/onnuri/onnuriMktList.do?menu_type_a=A&menu_cms=&menu_id=070400#shopPopBtn\n\nimport pandas as pd\nimport numpy as np\n\nmarket = pd.read_excel(\"traditionalmarket.xlsx\")\nmarket2 = market.copy()\nmarket2.head()\n\n\n\n\n\n\n\n\n시장명\n시장유형\n소재지도로명주소\n시장개설주기\n소재지지번주소\n점포수\n사용가능상품권\n공중화장실 보유여부\n주차장 보유여부\n개설년도\n데이터기준일자\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\n\n\n\n\n\n\n\n현행 시장법상 시장은 상설시장과 정기시장으로 구분된다.\n 상설 시장 : 시장 개설 요건을 갖추고, 일정한 구역내에서 상시로 거래하는 영업장. \n정기 시장 : 일정한 지역안에서 정기 또는 계절적으로 개설되는 시장.  상설 시장과 5일장이 공존하는 시장 : 관광형 시장으로 탈바꿈한 시장. 5일 장날이 되면 주민, 관광객 등으로 인상한해를 이룬다.\n데이터상 ’시장유형’에 정기시장이 존재하면 ’시장개설주기’가 5일장이라고 하는지 알아보고자 함.\nhttps://wowmap.kr/market5 : 5일장 지도 (위치)\n\n\n\nmarket2 = market2.rename(columns={'시장명' : 'market_name',\n                              '시장유형' : 'type',\n                              '소재지도로명주소' : 'address_new',\n                              '시장개설주기' : 'open_period',\n                              '소재지지번주소' : 'address_old',\n                              '점포수' : 'market_count',\n                              '사용가능상품권' : 'certificate',\n                              '공중화장실 보유여부' : 'public_toilet',\n                              '주차장 보유여부' : 'parking_lot',\n                              '개설년도' : 'year' ,\n                              '데이터기준일자' : 'data_date'})\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\n\n\n\n\n\n\n\n잘 바뀐 것을 알 수 있다.\n\n\n\n\nmarket2.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 1439 entries, 0 to 1438\nData columns (total 11 columns):\n #   Column         Non-Null Count  Dtype         \n---  ------         --------------  -----         \n 0   market_name    1439 non-null   object        \n 1   type           1439 non-null   object        \n 2   address_new    1439 non-null   object        \n 3   open_period    1439 non-null   object        \n 4   address_old    1439 non-null   object        \n 5   market_count   1439 non-null   int64         \n 6   certificate    1159 non-null   object        \n 7   public_toilet  1439 non-null   object        \n 8   parking_lot    1439 non-null   object        \n 9   year           1281 non-null   float64       \n 10  data_date      1439 non-null   datetime64[ns]\ndtypes: datetime64[ns](1), float64(1), int64(1), object(8)\nmemory usage: 123.8+ KB\n\n\n8개가 범주컬럼이고, 2개가 수치 컬럼, 1개가 날짜컬럼임을 알 수 있다. (수치컬럼중 1개는 연도컬럼이라서, 우리가 분석해 볼 수 있는 수치 컬럼은 1개뿐이다.) 그리고 사용가능상품권(certificate)와 개설연도(year)에만 null값이 있다는 것을 알 수 있다.\n각 컬럼의 범주 알아보기\n\nmarket2['market_name'].value_counts()\n\nmarket_name\n중앙시장              16\n동부시장               6\n역전시장               5\n현대시장               4\n신흥시장               4\n                  ..\n서문시장               1\n육거리종합시장            1\n원마루시장              1\n청주두꺼비시장(구수곡시장)     1\n주문진건어물시장           1\nName: count, Length: 1367, dtype: int64\n\n\n이름이 동일한 서로 다른 시장이 존재함.\n\nmarket2['type'].value_counts()\n\ntype\n상설       1002\n상설+정기     259\n정기        178\nName: count, dtype: int64\n\n\n시장 유형은 3가지임.\n\nmarket2['address_new'].value_counts()\n\naddress_new\n경상북도 포항시 북구 죽도시장길 4-7        2\n대구광역시 북구 칠성시장로 5길 22         2\n경상북도 예천군 예천읍 시장로 109         2\n대구광역시 남구 대명동 1157-10         2\n서울특별시 강북구 수유동 54-5           2\n                            ..\n충청북도 청주시 서원구 사직대로 265번길 7    1\n충청북도 청주시 서원구 사칭동 2862-2      1\n충청북도 청주시 서원구 수곡로 58번길 7-2    1\n충청북도 청주시 청원구 공항로 58번길 14     1\n강원도 강릉시 주문진읍 구 시장길           1\nName: count, Length: 1430, dtype: int64\n\n\n\nmarket2['address_old'].value_counts()\n\naddress_old\n경기 김포시 양촌읍 414-3             2\n대구 수성구 수성동2가 39-4            2\n경기 성남시 은행동 1553              2\n대구 중구 대신동 115-379            2\n서울 강북구 수유동 54-5              2\n                            ..\n충북 청주시 사직동 265-19            1\n충북 청주시 사창동 286-22            1\n충북 청주시 수곡동 862               1\n충북 청주시 내덕동 398-4             1\n강원 강릉시 주문진읍 주문리 321-52번지     1\nName: count, Length: 1430, dtype: int64\n\n\n주소가 동일한 시장이 있음\n\nmarket2['open_period'].value_counts()\n\nopen_period\n상설    1002\n5일     435\n2일       1\n6일       1\nName: count, dtype: int64\n\n\n정기 시장에 5일, 2일, 6일 있음.\n\nmarket2['certificate'].value_counts()\n\ncertificate\n온누리상품권    1159\nName: count, dtype: int64\n\n\n\nmarket2['public_toilet'].value_counts()\n\npublic_toilet\nY    1308\nN     131\nName: count, dtype: int64\n\n\n\nmarket2['parking_lot'].value_counts()\n\nparking_lot\nY    859\nN    580\nName: count, dtype: int64\n\n\n\nmarket2['year'].value_counts()\n\nyear\n2005.0    130\n2006.0    104\n2013.0     85\n2009.0     80\n2007.0     78\n         ... \n1954.0      1\n1928.0      1\n1926.0      1\n1918.0      1\n1920.0      1\nName: count, Length: 73, dtype: int64\n\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nyear_group_count = market2.groupby('year').agg(year_count= ('year', 'count'))\n\nplt.clf()\nsns.lineplot(data=year_group_count, x='year', y='year_count')\nplt.show()\n\n\n\n\n\n\n\n\n\nmarket2['data_date'].value_counts()\n\ndata_date\n2015-12-31    1439\nName: count, dtype: int64\n\n\n\n\n\n\nmarket2[['market_count']].describe()\n\n\n\n\n\n\n\n\nmarket_count\n\n\n\n\ncount\n1439.000000\n\n\nmean\n143.907575\n\n\nstd\n298.989963\n\n\nmin\n0.000000\n\n\n25%\n50.000000\n\n\n50%\n80.000000\n\n\n75%\n134.000000\n\n\nmax\n5852.000000\n\n\n\n\n\n\n\n점포수 위주로 봤을 때, 25%, 75% 기준으로 점포 사이즈를 나누는 것이 합리적으로 보인다. samll : 50개 미만 medium : 50개 이상 134개 미만 large : 134개 이상 3가지의 범주로 나누고자 한다.\n\n\n\n\nmarket2 = market2.assign(market_scale = np.where(market2[\"market_count\"] &gt;= 134, \"large\", \n                                        np.where(market2[\"market_count\"] &gt;= 50, \"medium\", \"small\")))\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\n\n\n\n\n\n\n\n점포수대로 범주화가 잘 되어진 것으로 보인다.\n\nimport matplotlib.pyplot as plt\nplt.clf()\nmarket2['market_scale'].value_counts().plot.bar(rot=0)\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nmarket2['level'] = np.where((market2['public_toilet'] == 'Y') & (market2['parking_lot'] == 'Y'), 'high', \n                   np.where((market2['public_toilet'] == 'N') & (market2['public_toilet'] == 'N') , 'low', 'intermediate'))\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n\n\n\n\n\n\n\n편의시절(공중화장실, 주차장) 보유 여부에 따라 시장의 편의성이 얼마나 좋은지 범주화 해보고자 한다.\n(공중화장실 Y, 주차장 Y) -&gt; high (공중화장실 Y, 주차장 N) -&gt; intermediate (공중화장실 N, 주차장 Y) -&gt; intermediate (공중화장실 N, 주차장 N) -&gt; low\n\nimport matplotlib.pyplot as plt\nplt.clf()\nmarket2['level'].value_counts().plot.bar(rot=0)\nplt.show()\n\n\n\n\n\n\n\n\n대다수의 시장이 편의시설이 잘 구비되어 있음을 알 수 있다.\nY의 현황을 파악하기 위해서, N은 null값으로 만들기 -&gt; market3 데이터프레임으로 함. N 갯수 알아보기\n\nmarket2['public_toilet'].value_counts()\n\npublic_toilet\nY    1308\nN     131\nName: count, dtype: int64\n\n\n\nmarket2['parking_lot'].value_counts()\n\nparking_lot\nY    859\nN    580\nName: count, dtype: int64\n\n\n온누리 상품권은 사용안하는 곳은 null값이니까 그대로 count 쓰면 쓰는 곳만 세어짐 공중화장실, 주차장은 Y/N 이므로, Y만 세려면 Y만 세어줘야 함.\n\nmarket3 = market2.copy()\nimport numpy as np\nmarket3.loc[market3['public_toilet']=='N', 'public_toilet'] = np.nan\nmarket3['public_toilet'].isna().sum()\n\nmarket3.loc[market3['parking_lot']=='N', 'parking_lot'] = np.nan\nmarket3['parking_lot'].isna().sum()\n\n\npd.set_option('display.max_columns', None)\ngroup_df = market3.groupby(['type','market_scale']).agg(market_count= ('market_name','count')\n                                                       , certificate_count = ('certificate', 'count')\n                                                       , public_toilet_count = ('public_toilet', 'count')\n                                                       , parking_lot_count = ('parking_lot', 'count'))\ngroup_df\n\n\n\n\n\n\n\n\n\nmarket_count\ncertificate_count\npublic_toilet_count\nparking_lot_count\n\n\ntype\nmarket_scale\n\n\n\n\n\n\n\n\n상설\nlarge\n281\n256\n259\n182\n\n\nmedium\n532\n459\n444\n247\n\n\nsmall\n189\n127\n180\n103\n\n\n상설+정기\nlarge\n66\n64\n63\n53\n\n\nmedium\n145\n132\n138\n101\n\n\nsmall\n48\n33\n48\n40\n\n\n정기\nlarge\n15\n14\n15\n13\n\n\nmedium\n46\n32\n46\n36\n\n\nsmall\n117\n42\n115\n84\n\n\n\n\n\n\n\n5일장 중에서 점포수가 많은 시장은 15곳 밖에 안 됨. 대부분 small에 해당함. 따라서 5일장만 열리는 곳은 소규모로 진행되는 시장임. 즉 외부 관광객이 간다기 보다는 지역 현지인들이 이용할 것으로 보임. 라고 생각을 했지, 5일장 블로그 봐보니까 관광지라면 관광객도 갈 법한 점포들도 있었음.\n\ngroup_df = market3.groupby(['type','market_scale','level']).agg(market_count= ('market_name','count')\n                                                       , certificate_count = ('certificate', 'count')\n                                                       , public_toilet_count = ('public_toilet', 'count')\n                                                       , parking_lot_count = ('parking_lot', 'count'))\ngroup_df['certificate_pct']= round(group_df['certificate_count']/group_df['market_count']*100,1)\ngroup_df['public_toilet_pct']=round(group_df['public_toilet_count']/group_df['market_count']*100,1)\ngroup_df['parking_lot_pct']=round(group_df['parking_lot_count']/group_df['market_count']*100,1)\ngroup_df\n\n\n\n\n\n\n\n\n\n\nmarket_count\ncertificate_count\npublic_toilet_count\nparking_lot_count\ncertificate_pct\npublic_toilet_pct\nparking_lot_pct\n\n\ntype\nmarket_scale\nlevel\n\n\n\n\n\n\n\n\n\n\n\n상설\nlarge\nhigh\n175\n159\n175\n175\n90.9\n100.0\n100.0\n\n\nintermediate\n84\n76\n84\n0\n90.5\n100.0\n0.0\n\n\nlow\n22\n21\n0\n7\n95.5\n0.0\n31.8\n\n\nmedium\nhigh\n231\n205\n231\n231\n88.7\n100.0\n100.0\n\n\nintermediate\n213\n180\n213\n0\n84.5\n100.0\n0.0\n\n\nlow\n88\n74\n0\n16\n84.1\n0.0\n18.2\n\n\nsmall\nhigh\n100\n68\n100\n100\n68.0\n100.0\n100.0\n\n\nintermediate\n80\n51\n80\n0\n63.7\n100.0\n0.0\n\n\nlow\n9\n8\n0\n3\n88.9\n0.0\n33.3\n\n\n상설+정기\nlarge\nhigh\n53\n51\n53\n53\n96.2\n100.0\n100.0\n\n\nintermediate\n10\n10\n10\n0\n100.0\n100.0\n0.0\n\n\nlow\n3\n3\n0\n0\n100.0\n0.0\n0.0\n\n\nmedium\nhigh\n99\n92\n99\n99\n92.9\n100.0\n100.0\n\n\nintermediate\n39\n33\n39\n0\n84.6\n100.0\n0.0\n\n\nlow\n7\n7\n0\n2\n100.0\n0.0\n28.6\n\n\nsmall\nhigh\n40\n28\n40\n40\n70.0\n100.0\n100.0\n\n\nintermediate\n8\n5\n8\n0\n62.5\n100.0\n0.0\n\n\n정기\nlarge\nhigh\n13\n12\n13\n13\n92.3\n100.0\n100.0\n\n\nintermediate\n2\n2\n2\n0\n100.0\n100.0\n0.0\n\n\nmedium\nhigh\n36\n28\n36\n36\n77.8\n100.0\n100.0\n\n\nintermediate\n10\n4\n10\n0\n40.0\n100.0\n0.0\n\n\nsmall\nhigh\n83\n34\n83\n83\n41.0\n100.0\n100.0\n\n\nintermediate\n32\n8\n32\n0\n25.0\n100.0\n0.0\n\n\nlow\n2\n0\n0\n1\n0.0\n0.0\n50.0\n\n\n\n\n\n\n\n비율만 뽑아서 봐보기\n\ngroup_df.iloc[:,[0,4,5,6]]\n\n\n\n\n\n\n\n\n\n\nmarket_count\ncertificate_pct\npublic_toilet_pct\nparking_lot_pct\n\n\ntype\nmarket_scale\nlevel\n\n\n\n\n\n\n\n\n상설\nlarge\nhigh\n175\n90.9\n100.0\n100.0\n\n\nintermediate\n84\n90.5\n100.0\n0.0\n\n\nlow\n22\n95.5\n0.0\n31.8\n\n\nmedium\nhigh\n231\n88.7\n100.0\n100.0\n\n\nintermediate\n213\n84.5\n100.0\n0.0\n\n\nlow\n88\n84.1\n0.0\n18.2\n\n\nsmall\nhigh\n100\n68.0\n100.0\n100.0\n\n\nintermediate\n80\n63.7\n100.0\n0.0\n\n\nlow\n9\n88.9\n0.0\n33.3\n\n\n상설+정기\nlarge\nhigh\n53\n96.2\n100.0\n100.0\n\n\nintermediate\n10\n100.0\n100.0\n0.0\n\n\nlow\n3\n100.0\n0.0\n0.0\n\n\nmedium\nhigh\n99\n92.9\n100.0\n100.0\n\n\nintermediate\n39\n84.6\n100.0\n0.0\n\n\nlow\n7\n100.0\n0.0\n28.6\n\n\nsmall\nhigh\n40\n70.0\n100.0\n100.0\n\n\nintermediate\n8\n62.5\n100.0\n0.0\n\n\n정기\nlarge\nhigh\n13\n92.3\n100.0\n100.0\n\n\nintermediate\n2\n100.0\n100.0\n0.0\n\n\nmedium\nhigh\n36\n77.8\n100.0\n100.0\n\n\nintermediate\n10\n40.0\n100.0\n0.0\n\n\nsmall\nhigh\n83\n41.0\n100.0\n100.0\n\n\nintermediate\n32\n25.0\n100.0\n0.0\n\n\nlow\n2\n0.0\n0.0\n50.0\n\n\n\n\n\n\n\n\n\n\n\nmarket2.query('type == \"상설+정기\"').head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\n\n\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n\n\n7\n간성시장\n상설+정기\n강원도 고성군 간성시장 2길 11-1\n5일\n강원 고성군 간성읍 신안리 262번지\n89\n온누리상품권\nY\nY\n2003.0\n2015-12-31\nmedium\nhigh\n\n\n8\n거진시장\n상설+정기\n강원도 고성군 거진읍 거진시장길 15\n5일\n강원 고성군 거진읍 거진리 272번지\n51\n온누리상품권\nY\nY\n2010.0\n2015-12-31\nmedium\nhigh\n\n\n9\n북평민속시장\n상설+정기\n강원도 동해시 북평 오일장길 32\n5일\n강원 동해시 구미동 497-11번지 일원\n130\n온누리상품권\nY\nY\n2013.0\n2015-12-31\nmedium\nhigh\n\n\n15\n삼척중앙시장\n상설+정기\n강원도 삼척시 진주로 12-21\n5일\n강원 삼척시 남양동 55-4\n299\n온누리상품권\nY\nY\n2014.0\n2015-12-31\nlarge\nhigh\n\n\n\n\n\n\n\n\n\n\n\nfirst_tokens = []\ni=0\n\n# for loop을 사용하여 각 행의 첫 음절 추출\nfor address in market2['address_old']:\n    first_token = market2['address_old'][i].split()[0] +' ' + market2['address_old'][i].split()[1] # 띄어쓰기를 기준으로 나눈 후 첫 번째 토큰을 추출\n    first_tokens.append(first_token)\n    i += 1\n\n# 추출한 첫 음절을 새로운 컬럼으로 추가\nmarket2['town_city'] = first_tokens\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\ntown_city\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원 강릉시\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원 강릉시\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원 강릉시\n\n\n\n\n\n\n\n\n\n\n\npd.set_option('display.max_rows', None)\nmarket2['town_city'].value_counts()\n\ntown_city\n경남 창원시     59\n경북 포항시     34\n부산 부산진구    26\n대구 달서구     23\n경기 성남시     22\n서울 중구      21\n대구 북구      20\n부산 수영구     19\n경기 수원시     19\n경기 부천시     19\n서울 동대문구    18\n제주 제주시     17\n대구 중구      16\n울산 중구      16\n경북 구미시     16\n부산 중구      15\n대구 동구      15\n경북 경주시     15\n부산 사하구     15\n전남 여수시     15\n부산 사상구     14\n경남 진주시     13\n대전 동구      13\n대구 남구      13\n충북 청주시     13\n서울 관악구     13\n부산 동래구     12\n충북 충주시     12\n경북 영주시     12\n부산 남구      11\n전북 익산시     11\n부산 해운대구    11\n서울 중랑구     11\n서울 영등포구    11\n서울 강북구     11\n서울 강서구     11\n서울 마포구     10\n경남 거제시     10\n대구 서구      10\n서울 강동구     10\n서울 광진구     10\n울산 남구       9\n인천 남구       9\n부산 서구       9\n서울 성북구      9\n서울 양천구      9\n서울 동작구      9\n경기 안양시      9\n경북 안동시      9\n서울 은평구      9\n대구 수성구      9\n경남 하동군      8\n광주 서구       8\n울산 울주군      8\n서울 종로구      8\n서울 서대문구     8\n부산 금정구      8\n전남 보성군      8\n충남 금산군      8\n부산 동구       8\n전북 군산시      8\n강원 춘천시      8\n제주 서귀포시     8\n인천 부평구      7\n인천 동구       7\n부산 연제구      7\n대전 중구       7\n서울 용산구      7\n경남 사천시      7\n강원 강릉시      7\n강원 원주시      7\n경북 의성군      7\n경남 양산시      7\n충북 제천시      7\n전남 목포시      7\n전남 순천시      7\n충남 천안시      7\n충남 예산군      7\n인천 서구       6\n전남 고흥군      6\n전남 나주시      6\n서울 송파구      6\n경기 파주시      6\n전남 해남군      6\n전남 광양시      6\n전북 고창군      6\n울산 동구       6\n부산 북구       6\n인천 남동구      6\n경북 예천군      6\n경북 울진군      6\n경남 김해시      6\n경북 상주시      6\n광주 북구       6\n광주 광산구      6\n경남 밀양시      6\n경북 청송군      5\n경기 평택시      5\n전남 장흥군      5\n전남 영암군      5\n서울 구로구      5\n전북 전주시      5\n충북 음성군      5\n충북 보은군      5\n충남 보령시      5\n충남 논산시      5\n전남 화순군      5\n경북 문경시      5\n경남 합천군      5\n경남 함양군      5\n경남 산청군      5\n서울 강남구      5\n경남 창녕군      5\n충북 괴산군      4\n대전 대덕구      4\n서울 성동구      4\n충남 홍성군      4\n충남 서산시      4\n전남 완도군      4\n전북 김제시      4\n강원 정선군      4\n경남 남해군      4\n경남 고성군      4\n경기 화성시      4\n충북 단양군      4\n전남 함평군      4\n전북 임실군      4\n전북 무주군      4\n서울 도봉구      4\n세종 세종시      4\n경남 함안군      4\n경북 군위군      4\n경북 영덕군      4\n경북 청도군      4\n광주 동구       4\n경기 동두천시     4\n경기 김포시      4\n강원 삼척시      4\n강원 철원군      4\n경기 시흥시      4\n강원 평창군      4\n경기 고양시      4\n강원 영월군      3\n경기 안성시      3\n경기 양평군      3\n강원 동해시      3\n전북 장수군      3\n경남 통영시      3\n경북 영천시      3\n경기 의정부시     3\n경북 경산시      3\n대구 달성군      3\n전남 진도군      3\n충남 태안군      3\n인천 강화군      3\n부산 진구       3\n부산 영도구      3\n서울 금천구      3\n인천 계양구      3\n인천 중구       3\n충남 공주시      3\n전북 순창군      3\n전남 영광군      3\n전북 정읍시      3\n충남 부여군      3\n충남 당진시      3\n전남 무안군      3\n전남 장성군      3\n전북 남원시      3\n전북 완주군      3\n전남 강진군      3\n전남 구례군      3\n전남 곡성군      3\n강원 고성군      2\n대전 서구       2\n인천 연수구      2\n서울 서초구      2\n경북 칠곡군      2\n경기 용인시      2\n경기 광명시      2\n경기 과천시      2\n경기 군포시      2\n강원 인제군      2\n강원 속초시      2\n강원 홍천군      2\n강원 태백시      2\n경기 포천시      2\n경기 하남시      2\n경남 의령군      2\n광주 남구       2\n경북 성주군      2\n경북 봉화군      2\n경북 김천시      2\n경기 이천시      2\n충북 진천군      2\n충남 아산시      2\n충북 영동군      2\n충남 청양군      2\n충북 청원군      2\n전북 부안군      2\n전남 담양군      2\n충남 서천군      2\n충북 옥천군      2\n서울 노원구      2\n강원 양구군      1\n강원 화천군      1\n경기 광주시      1\n경기 구리시      1\n경기 가평군      1\n강원 양양군      1\n경북 고령군      1\n경북 영양군      1\n경기 여주시      1\n경남 거창군      1\n경기 오산시      1\n경기 연천군      1\n경기 의왕시      1\n경기 안산시      1\n강원 횡성군      1\n부산 강서구      1\n대전 유성구      1\n부산 기장군      1\n울산 북구       1\n전남 신안군      1\n전북 진안군      1\n충북 증평군      1\nName: count, dtype: int64\n\n\n\n\n\n\nmarket4 = market2.query('type == \"상설+정기\"')\nmarket4['town_city'].value_counts()\n\ntown_city\n경북 경주시     7\n경북 울진군     6\n경남 창원시     5\n전북 익산시     5\n충북 보은군     5\n충북 음성군     5\n경남 하동군     4\n경기 파주시     4\n경기 평택시     4\n경북 안동시     4\n강원 철원군     4\n세종 세종시     4\n울산 울주군     4\n경북 포항시     4\n충남 금산군     4\n충남 천안시     4\n충북 괴산군     4\n충남 보령시     4\n충남 논산시     4\n강원 평창군     4\n경기 화성시     4\n전남 고흥군     4\n경북 영덕군     3\n경북 경산시     3\n경북 구미시     3\n경기 안성시     3\n강원 정선군     3\n경북 영천시     3\n경북 예천군     3\n경북 청송군     3\n경남 합천군     3\n충남 당진시     3\n충북 제천시     3\n충북 충주시     3\n전북 무주군     3\n충남 홍성군     3\n충북 단양군     3\n전북 정읍시     2\n충남 공주시     2\n전남 무안군     2\n전북 김제시     2\n전남 장흥군     2\n전북 완주군     2\n경남 의령군     2\n경남 사천시     2\n경북 군위군     2\n경북 문경시     2\n경남 창녕군     2\n경남 밀양시     2\n경남 양산시     2\n경남 김해시     2\n경남 남해군     2\n강원 인제군     2\n강원 원주시     2\n강원 고성군     2\n강원 홍천군     2\n경북 김천시     2\n경북 봉화군     2\n경북 상주시     2\n충남 청양군     2\n충북 영동군     2\n충북 청원군     2\n충남 예산군     2\n충남 서천군     2\n대구 달성군     2\n대구 북구      2\n전북 남원시     2\n울산 중구      2\n경기 성남시     1\n경기 안산시     1\n경기 양평군     1\n경기 하남시     1\n경남 고성군     1\n경남 산청군     1\n경남 진주시     1\n강원 춘천시     1\n강원 삼척시     1\n강원 양구군     1\n강원 화천군     1\n경기 가평군     1\n경기 고양시     1\n경기 광주시     1\n강원 횡성군     1\n경기 동두천시    1\n경기 오산시     1\n경기 용인시     1\n경기 이천시     1\n경기 여주시     1\n강원 양양군     1\n강원 동해시     1\n강원 강릉시     1\n경북 영양군     1\n경북 성주군     1\n경남 함양군     1\n경남 함안군     1\n경남 거창군     1\n울산 북구      1\n전남 나주시     1\n경북 영주시     1\n광주 북구      1\n경북 칠곡군     1\n대구 동구      1\n대구 중구      1\n대전 대덕구     1\n부산 북구      1\n부산 사하구     1\n서울 은평구     1\n전북 고창군     1\n전남 순천시     1\n전남 여수시     1\n전남 영광군     1\n전남 강진군     1\n전북 임실군     1\n전북 장수군     1\n전북 진안군     1\n충남 아산시     1\n충남 서산시     1\n충남 부여군     1\n충남 태안군     1\n충북 증평군     1\n충북 옥천군     1\n충북 진천군     1\n충북 청주시     1\nName: count, dtype: int64\n\n\nhttps://www.bigdata-culture.kr/bigdata/user/data_market/detail.do?id=359f0000-4129-11ec-a107-3b8bd6a15b10 관심있는 지역\n\n\n\n\nimport pandas as pd\npop = pd.read_excel('market_pop.xlsx')\npop.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\nadress_road\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\nregion\nage_under_20\nage_2050\nage_over_60\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원도\n18.996236\n57.71184\n23.291924\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원도\n18.996236\n57.71184\n23.291924\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원도\n18.996236\n57.71184\n23.291924\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원도\n18.996236\n57.71184\n23.291924\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원도\n18.996236\n57.71184\n23.291924\n\n\n\n\n\n\n\n\n\n\n\npop_group = pop.groupby('region', as_index = False).agg(age_under_20 = ('age_under_20','min')\n                         , age_2050 = ('age_2050', 'min')\n                         , age_over_60 = ('age_over_60', 'min'))\npop_group\n\n\n\n\n\n\n\n\nregion\nage_under_20\nage_2050\nage_over_60\n\n\n\n\n0\n강원도\n18.996236\n57.711840\n23.291924\n\n\n1\n경기도\n21.808344\n62.918054\n15.273602\n\n\n2\n경상남도\n20.868237\n59.572973\n19.558790\n\n\n3\n경상북도\n18.525832\n57.134052\n24.340117\n\n\n4\n광주광역시\n23.142591\n60.802718\n16.054691\n\n\n5\n대구광역시\n20.005595\n61.407557\n18.586848\n\n\n6\n대전광역시\n21.728893\n62.230482\n16.040625\n\n\n7\n부산광역시\n17.437931\n60.857391\n21.704678\n\n\n8\n서울특별시\n17.651737\n63.912396\n18.435867\n\n\n9\n세종특별시\n25.238046\n59.895488\n14.866467\n\n\n10\n울산광역시\n21.831408\n64.150336\n14.018256\n\n\n11\n인천광역시\n20.380236\n63.853490\n15.766274\n\n\n12\n전라남도\n19.282335\n54.060092\n26.657573\n\n\n13\n전라북도\n20.197613\n55.962285\n23.840101\n\n\n14\n제주도\n22.501141\n58.640284\n18.858575\n\n\n15\n충청남도\n20.525604\n57.425821\n22.048575\n\n\n16\n충청북도\n20.325553\n59.036953\n20.637494\n\n\n\n\n\n\n\n\n\n\n\nfirst_tokens=[]\n\nfor address in market2['address_new']:\n    first_token = address.split()[0]\n    first_tokens.append(first_token)\n    \nmarket2['region'] = first_tokens\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\ntown_city\nregion\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원 강릉시\n강원도\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원 강릉시\n강원도\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원 강릉시\n강원도\n\n\n\n\n\n\n\n\n\n\n\nmarket_pop = pd.merge(market2, pop_group, how='left', on='region')\nmarket_pop.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\ntown_city\nregion\nage_under_20\nage_2050\nage_over_60\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n\n\n\n\n\n\n#market_pop.to_excel(excel_writer='market_join.xlsx')"
  },
  {
    "objectID": "project1.html#변수명-바꾸기",
    "href": "project1.html#변수명-바꾸기",
    "title": "project1",
    "section": "",
    "text": "market2 = market2.rename(columns={'시장명' : 'market_name',\n                              '시장유형' : 'type',\n                              '소재지도로명주소' : 'address_new',\n                              '시장개설주기' : 'open_period',\n                              '소재지지번주소' : 'address_old',\n                              '점포수' : 'market_count',\n                              '사용가능상품권' : 'certificate',\n                              '공중화장실 보유여부' : 'public_toilet',\n                              '주차장 보유여부' : 'parking_lot',\n                              '개설년도' : 'year' ,\n                              '데이터기준일자' : 'data_date'})\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\n\n\n\n\n\n\n\n잘 바뀐 것을 알 수 있다."
  },
  {
    "objectID": "project1.html#데이터-정보-알아보기",
    "href": "project1.html#데이터-정보-알아보기",
    "title": "project1",
    "section": "",
    "text": "market2.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 1439 entries, 0 to 1438\nData columns (total 11 columns):\n #   Column         Non-Null Count  Dtype         \n---  ------         --------------  -----         \n 0   market_name    1439 non-null   object        \n 1   type           1439 non-null   object        \n 2   address_new    1439 non-null   object        \n 3   open_period    1439 non-null   object        \n 4   address_old    1439 non-null   object        \n 5   market_count   1439 non-null   int64         \n 6   certificate    1159 non-null   object        \n 7   public_toilet  1439 non-null   object        \n 8   parking_lot    1439 non-null   object        \n 9   year           1281 non-null   float64       \n 10  data_date      1439 non-null   datetime64[ns]\ndtypes: datetime64[ns](1), float64(1), int64(1), object(8)\nmemory usage: 123.8+ KB\n\n\n8개가 범주컬럼이고, 2개가 수치 컬럼, 1개가 날짜컬럼임을 알 수 있다. (수치컬럼중 1개는 연도컬럼이라서, 우리가 분석해 볼 수 있는 수치 컬럼은 1개뿐이다.) 그리고 사용가능상품권(certificate)와 개설연도(year)에만 null값이 있다는 것을 알 수 있다.\n각 컬럼의 범주 알아보기\n\nmarket2['market_name'].value_counts()\n\nmarket_name\n중앙시장              16\n동부시장               6\n역전시장               5\n현대시장               4\n신흥시장               4\n                  ..\n서문시장               1\n육거리종합시장            1\n원마루시장              1\n청주두꺼비시장(구수곡시장)     1\n주문진건어물시장           1\nName: count, Length: 1367, dtype: int64\n\n\n이름이 동일한 서로 다른 시장이 존재함.\n\nmarket2['type'].value_counts()\n\ntype\n상설       1002\n상설+정기     259\n정기        178\nName: count, dtype: int64\n\n\n시장 유형은 3가지임.\n\nmarket2['address_new'].value_counts()\n\naddress_new\n경상북도 포항시 북구 죽도시장길 4-7        2\n대구광역시 북구 칠성시장로 5길 22         2\n경상북도 예천군 예천읍 시장로 109         2\n대구광역시 남구 대명동 1157-10         2\n서울특별시 강북구 수유동 54-5           2\n                            ..\n충청북도 청주시 서원구 사직대로 265번길 7    1\n충청북도 청주시 서원구 사칭동 2862-2      1\n충청북도 청주시 서원구 수곡로 58번길 7-2    1\n충청북도 청주시 청원구 공항로 58번길 14     1\n강원도 강릉시 주문진읍 구 시장길           1\nName: count, Length: 1430, dtype: int64\n\n\n\nmarket2['address_old'].value_counts()\n\naddress_old\n경기 김포시 양촌읍 414-3             2\n대구 수성구 수성동2가 39-4            2\n경기 성남시 은행동 1553              2\n대구 중구 대신동 115-379            2\n서울 강북구 수유동 54-5              2\n                            ..\n충북 청주시 사직동 265-19            1\n충북 청주시 사창동 286-22            1\n충북 청주시 수곡동 862               1\n충북 청주시 내덕동 398-4             1\n강원 강릉시 주문진읍 주문리 321-52번지     1\nName: count, Length: 1430, dtype: int64\n\n\n주소가 동일한 시장이 있음\n\nmarket2['open_period'].value_counts()\n\nopen_period\n상설    1002\n5일     435\n2일       1\n6일       1\nName: count, dtype: int64\n\n\n정기 시장에 5일, 2일, 6일 있음.\n\nmarket2['certificate'].value_counts()\n\ncertificate\n온누리상품권    1159\nName: count, dtype: int64\n\n\n\nmarket2['public_toilet'].value_counts()\n\npublic_toilet\nY    1308\nN     131\nName: count, dtype: int64\n\n\n\nmarket2['parking_lot'].value_counts()\n\nparking_lot\nY    859\nN    580\nName: count, dtype: int64\n\n\n\nmarket2['year'].value_counts()\n\nyear\n2005.0    130\n2006.0    104\n2013.0     85\n2009.0     80\n2007.0     78\n         ... \n1954.0      1\n1928.0      1\n1926.0      1\n1918.0      1\n1920.0      1\nName: count, Length: 73, dtype: int64\n\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nyear_group_count = market2.groupby('year').agg(year_count= ('year', 'count'))\n\nplt.clf()\nsns.lineplot(data=year_group_count, x='year', y='year_count')\nplt.show()\n\n\n\n\n\n\n\n\n\nmarket2['data_date'].value_counts()\n\ndata_date\n2015-12-31    1439\nName: count, dtype: int64"
  },
  {
    "objectID": "project1.html#정포수-요약-정보-알아보기",
    "href": "project1.html#정포수-요약-정보-알아보기",
    "title": "project1",
    "section": "",
    "text": "market2[['market_count']].describe()\n\n\n\n\n\n\n\n\nmarket_count\n\n\n\n\ncount\n1439.000000\n\n\nmean\n143.907575\n\n\nstd\n298.989963\n\n\nmin\n0.000000\n\n\n25%\n50.000000\n\n\n50%\n80.000000\n\n\n75%\n134.000000\n\n\nmax\n5852.000000\n\n\n\n\n\n\n\n점포수 위주로 봤을 때, 25%, 75% 기준으로 점포 사이즈를 나누는 것이 합리적으로 보인다. samll : 50개 미만 medium : 50개 이상 134개 미만 large : 134개 이상 3가지의 범주로 나누고자 한다."
  },
  {
    "objectID": "project1.html#점포수로-범주화하기",
    "href": "project1.html#점포수로-범주화하기",
    "title": "project1",
    "section": "",
    "text": "market2 = market2.assign(market_scale = np.where(market2[\"market_count\"] &gt;= 134, \"large\", \n                                        np.where(market2[\"market_count\"] &gt;= 50, \"medium\", \"small\")))\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\n\n\n\n\n\n\n\n점포수대로 범주화가 잘 되어진 것으로 보인다.\n\nimport matplotlib.pyplot as plt\nplt.clf()\nmarket2['market_scale'].value_counts().plot.bar(rot=0)\nplt.show()"
  },
  {
    "objectID": "project1.html#편의시절공중화장실-주차장-보유-여부에-따라-시장을-범주화하기.",
    "href": "project1.html#편의시절공중화장실-주차장-보유-여부에-따라-시장을-범주화하기.",
    "title": "project1",
    "section": "",
    "text": "market2['level'] = np.where((market2['public_toilet'] == 'Y') & (market2['parking_lot'] == 'Y'), 'high', \n                   np.where((market2['public_toilet'] == 'N') & (market2['public_toilet'] == 'N') , 'low', 'intermediate'))\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n\n\n\n\n\n\n\n편의시절(공중화장실, 주차장) 보유 여부에 따라 시장의 편의성이 얼마나 좋은지 범주화 해보고자 한다.\n(공중화장실 Y, 주차장 Y) -&gt; high (공중화장실 Y, 주차장 N) -&gt; intermediate (공중화장실 N, 주차장 Y) -&gt; intermediate (공중화장실 N, 주차장 N) -&gt; low\n\nimport matplotlib.pyplot as plt\nplt.clf()\nmarket2['level'].value_counts().plot.bar(rot=0)\nplt.show()\n\n\n\n\n\n\n\n\n대다수의 시장이 편의시설이 잘 구비되어 있음을 알 수 있다.\nY의 현황을 파악하기 위해서, N은 null값으로 만들기 -&gt; market3 데이터프레임으로 함. N 갯수 알아보기\n\nmarket2['public_toilet'].value_counts()\n\npublic_toilet\nY    1308\nN     131\nName: count, dtype: int64\n\n\n\nmarket2['parking_lot'].value_counts()\n\nparking_lot\nY    859\nN    580\nName: count, dtype: int64\n\n\n온누리 상품권은 사용안하는 곳은 null값이니까 그대로 count 쓰면 쓰는 곳만 세어짐 공중화장실, 주차장은 Y/N 이므로, Y만 세려면 Y만 세어줘야 함.\n\nmarket3 = market2.copy()\nimport numpy as np\nmarket3.loc[market3['public_toilet']=='N', 'public_toilet'] = np.nan\nmarket3['public_toilet'].isna().sum()\n\nmarket3.loc[market3['parking_lot']=='N', 'parking_lot'] = np.nan\nmarket3['parking_lot'].isna().sum()\n\n\npd.set_option('display.max_columns', None)\ngroup_df = market3.groupby(['type','market_scale']).agg(market_count= ('market_name','count')\n                                                       , certificate_count = ('certificate', 'count')\n                                                       , public_toilet_count = ('public_toilet', 'count')\n                                                       , parking_lot_count = ('parking_lot', 'count'))\ngroup_df\n\n\n\n\n\n\n\n\n\nmarket_count\ncertificate_count\npublic_toilet_count\nparking_lot_count\n\n\ntype\nmarket_scale\n\n\n\n\n\n\n\n\n상설\nlarge\n281\n256\n259\n182\n\n\nmedium\n532\n459\n444\n247\n\n\nsmall\n189\n127\n180\n103\n\n\n상설+정기\nlarge\n66\n64\n63\n53\n\n\nmedium\n145\n132\n138\n101\n\n\nsmall\n48\n33\n48\n40\n\n\n정기\nlarge\n15\n14\n15\n13\n\n\nmedium\n46\n32\n46\n36\n\n\nsmall\n117\n42\n115\n84\n\n\n\n\n\n\n\n5일장 중에서 점포수가 많은 시장은 15곳 밖에 안 됨. 대부분 small에 해당함. 따라서 5일장만 열리는 곳은 소규모로 진행되는 시장임. 즉 외부 관광객이 간다기 보다는 지역 현지인들이 이용할 것으로 보임. 라고 생각을 했지, 5일장 블로그 봐보니까 관광지라면 관광객도 갈 법한 점포들도 있었음.\n\ngroup_df = market3.groupby(['type','market_scale','level']).agg(market_count= ('market_name','count')\n                                                       , certificate_count = ('certificate', 'count')\n                                                       , public_toilet_count = ('public_toilet', 'count')\n                                                       , parking_lot_count = ('parking_lot', 'count'))\ngroup_df['certificate_pct']= round(group_df['certificate_count']/group_df['market_count']*100,1)\ngroup_df['public_toilet_pct']=round(group_df['public_toilet_count']/group_df['market_count']*100,1)\ngroup_df['parking_lot_pct']=round(group_df['parking_lot_count']/group_df['market_count']*100,1)\ngroup_df\n\n\n\n\n\n\n\n\n\n\nmarket_count\ncertificate_count\npublic_toilet_count\nparking_lot_count\ncertificate_pct\npublic_toilet_pct\nparking_lot_pct\n\n\ntype\nmarket_scale\nlevel\n\n\n\n\n\n\n\n\n\n\n\n상설\nlarge\nhigh\n175\n159\n175\n175\n90.9\n100.0\n100.0\n\n\nintermediate\n84\n76\n84\n0\n90.5\n100.0\n0.0\n\n\nlow\n22\n21\n0\n7\n95.5\n0.0\n31.8\n\n\nmedium\nhigh\n231\n205\n231\n231\n88.7\n100.0\n100.0\n\n\nintermediate\n213\n180\n213\n0\n84.5\n100.0\n0.0\n\n\nlow\n88\n74\n0\n16\n84.1\n0.0\n18.2\n\n\nsmall\nhigh\n100\n68\n100\n100\n68.0\n100.0\n100.0\n\n\nintermediate\n80\n51\n80\n0\n63.7\n100.0\n0.0\n\n\nlow\n9\n8\n0\n3\n88.9\n0.0\n33.3\n\n\n상설+정기\nlarge\nhigh\n53\n51\n53\n53\n96.2\n100.0\n100.0\n\n\nintermediate\n10\n10\n10\n0\n100.0\n100.0\n0.0\n\n\nlow\n3\n3\n0\n0\n100.0\n0.0\n0.0\n\n\nmedium\nhigh\n99\n92\n99\n99\n92.9\n100.0\n100.0\n\n\nintermediate\n39\n33\n39\n0\n84.6\n100.0\n0.0\n\n\nlow\n7\n7\n0\n2\n100.0\n0.0\n28.6\n\n\nsmall\nhigh\n40\n28\n40\n40\n70.0\n100.0\n100.0\n\n\nintermediate\n8\n5\n8\n0\n62.5\n100.0\n0.0\n\n\n정기\nlarge\nhigh\n13\n12\n13\n13\n92.3\n100.0\n100.0\n\n\nintermediate\n2\n2\n2\n0\n100.0\n100.0\n0.0\n\n\nmedium\nhigh\n36\n28\n36\n36\n77.8\n100.0\n100.0\n\n\nintermediate\n10\n4\n10\n0\n40.0\n100.0\n0.0\n\n\nsmall\nhigh\n83\n34\n83\n83\n41.0\n100.0\n100.0\n\n\nintermediate\n32\n8\n32\n0\n25.0\n100.0\n0.0\n\n\nlow\n2\n0\n0\n1\n0.0\n0.0\n50.0\n\n\n\n\n\n\n\n비율만 뽑아서 봐보기\n\ngroup_df.iloc[:,[0,4,5,6]]\n\n\n\n\n\n\n\n\n\n\nmarket_count\ncertificate_pct\npublic_toilet_pct\nparking_lot_pct\n\n\ntype\nmarket_scale\nlevel\n\n\n\n\n\n\n\n\n상설\nlarge\nhigh\n175\n90.9\n100.0\n100.0\n\n\nintermediate\n84\n90.5\n100.0\n0.0\n\n\nlow\n22\n95.5\n0.0\n31.8\n\n\nmedium\nhigh\n231\n88.7\n100.0\n100.0\n\n\nintermediate\n213\n84.5\n100.0\n0.0\n\n\nlow\n88\n84.1\n0.0\n18.2\n\n\nsmall\nhigh\n100\n68.0\n100.0\n100.0\n\n\nintermediate\n80\n63.7\n100.0\n0.0\n\n\nlow\n9\n88.9\n0.0\n33.3\n\n\n상설+정기\nlarge\nhigh\n53\n96.2\n100.0\n100.0\n\n\nintermediate\n10\n100.0\n100.0\n0.0\n\n\nlow\n3\n100.0\n0.0\n0.0\n\n\nmedium\nhigh\n99\n92.9\n100.0\n100.0\n\n\nintermediate\n39\n84.6\n100.0\n0.0\n\n\nlow\n7\n100.0\n0.0\n28.6\n\n\nsmall\nhigh\n40\n70.0\n100.0\n100.0\n\n\nintermediate\n8\n62.5\n100.0\n0.0\n\n\n정기\nlarge\nhigh\n13\n92.3\n100.0\n100.0\n\n\nintermediate\n2\n100.0\n100.0\n0.0\n\n\nmedium\nhigh\n36\n77.8\n100.0\n100.0\n\n\nintermediate\n10\n40.0\n100.0\n0.0\n\n\nsmall\nhigh\n83\n41.0\n100.0\n100.0\n\n\nintermediate\n32\n25.0\n100.0\n0.0\n\n\nlow\n2\n0.0\n0.0\n50.0"
  },
  {
    "objectID": "project1.html#section",
    "href": "project1.html#section",
    "title": "project1",
    "section": "",
    "text": "plt.clf()\ndf = market2.groupby([\"type\", \"market_scale\"], as_index = False) \\\n            .agg(market_count = (\"market_scale\", \"count\"))\ndf.sort_values('market_count', ascending = False)\nplt.show()\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n정기 시장은 활성화 안 하는 지역으로 봐도 될까?\n\nmarket2['type'].value_counts()\n\ntype\n상설       1002\n상설+정기     259\n정기        178\nName: count, dtype: int64\n\n\nY의 현황을 파악하기 위해서, N은 null값으로 만들기 N 갯수 알아보기\n\nmarket2['public_toilet'].value_counts()\n\npublic_toilet\nY    1308\nN     131\nName: count, dtype: int64\n\n\n\nmarket2['parking_lot'].value_counts()\n\nparking_lot\nY    859\nN    580\nName: count, dtype: int64\n\n\n\nmarket3 = market2.copy()\nimport numpy as np\nmarket3.loc[market3['public_toilet']=='N', 'public_toilet'] = np.nan\nmarket3['public_toilet'].isna().sum()\n\nmarket3.loc[market3['parking_lot']=='N', 'parking_lot'] = np.nan\nmarket3['parking_lot'].isna().sum()\n\n\npd.set_option('display.max_columns', None)\ngroup_df = market3.groupby(['type','market_scale']).agg(market_count= ('market_name','count')\n                                                       , certificate_count = ('certificate', 'count')\n                                                       , public_toilet_count = ('public_toilet', 'count')\n                                                       , parking_lot_count = ('parking_lot', 'count'))\ngroup_df\n\n\n\n\n\n\n\n\n\nmarket_count\ncertificate_count\npublic_toilet_count\nparking_lot_count\n\n\ntype\nmarket_scale\n\n\n\n\n\n\n\n\n상설\nlarge\n281\n256\n259\n182\n\n\nmedium\n532\n459\n444\n247\n\n\nsmall\n189\n127\n180\n103\n\n\n상설+정기\nlarge\n66\n64\n63\n53\n\n\nmedium\n145\n132\n138\n101\n\n\nsmall\n48\n33\n48\n40\n\n\n정기\nlarge\n15\n14\n15\n13\n\n\nmedium\n46\n32\n46\n36\n\n\nsmall\n117\n42\n115\n84\n\n\n\n\n\n\n\n5일장 중에서 점포수가 많은 시장은 15곳 밖에 안 됨. 대부분 small에 해당함. 따라서 5일장만 열리는 곳은 소규모로 진행되는 시장임. 즉 외부 관광객이 간다기 보다는 지역 현지인들이 이용할 것으로 보임. 라고 생각을 했지, 5일장 블로그 봐보니까 관광지라면 관광객도 갈 법한 점포들도 있었음.\n\ngroup_df = market3.groupby(['type','market_scale','level']).agg(market_count= ('market_name','count')\n                                                       , certificate_count = ('certificate', 'count')\n                                                       , public_toilet_count = ('public_toilet', 'count')\n                                                       , parking_lot_count = ('parking_lot', 'count'))\ngroup_df['certificate_pct']= round(group_df['certificate_count']/group_df['market_count']*100,1)\ngroup_df['public_toilet_pct']=round(group_df['public_toilet_count']/group_df['market_count']*100,1)\ngroup_df['parking_lot_pct']=round(group_df['parking_lot_count']/group_df['market_count']*100,1)\ngroup_df\n\n\n\n\n\n\n\n\n\n\nmarket_count\ncertificate_count\npublic_toilet_count\nparking_lot_count\ncertificate_pct\npublic_toilet_pct\nparking_lot_pct\n\n\ntype\nmarket_scale\nlevel\n\n\n\n\n\n\n\n\n\n\n\n상설\nlarge\nhigh\n175\n159\n175\n175\n90.9\n100.0\n100.0\n\n\nintermediate\n84\n76\n84\n0\n90.5\n100.0\n0.0\n\n\nlow\n22\n21\n0\n7\n95.5\n0.0\n31.8\n\n\nmedium\nhigh\n231\n205\n231\n231\n88.7\n100.0\n100.0\n\n\nintermediate\n213\n180\n213\n0\n84.5\n100.0\n0.0\n\n\nlow\n88\n74\n0\n16\n84.1\n0.0\n18.2\n\n\nsmall\nhigh\n100\n68\n100\n100\n68.0\n100.0\n100.0\n\n\nintermediate\n80\n51\n80\n0\n63.7\n100.0\n0.0\n\n\nlow\n9\n8\n0\n3\n88.9\n0.0\n33.3\n\n\n상설+정기\nlarge\nhigh\n53\n51\n53\n53\n96.2\n100.0\n100.0\n\n\nintermediate\n10\n10\n10\n0\n100.0\n100.0\n0.0\n\n\nlow\n3\n3\n0\n0\n100.0\n0.0\n0.0\n\n\nmedium\nhigh\n99\n92\n99\n99\n92.9\n100.0\n100.0\n\n\nintermediate\n39\n33\n39\n0\n84.6\n100.0\n0.0\n\n\nlow\n7\n7\n0\n2\n100.0\n0.0\n28.6\n\n\nsmall\nhigh\n40\n28\n40\n40\n70.0\n100.0\n100.0\n\n\nintermediate\n8\n5\n8\n0\n62.5\n100.0\n0.0\n\n\n정기\nlarge\nhigh\n13\n12\n13\n13\n92.3\n100.0\n100.0\n\n\nintermediate\n2\n2\n2\n0\n100.0\n100.0\n0.0\n\n\nmedium\nhigh\n36\n28\n36\n36\n77.8\n100.0\n100.0\n\n\nintermediate\n10\n4\n10\n0\n40.0\n100.0\n0.0\n\n\nsmall\nhigh\n83\n34\n83\n83\n41.0\n100.0\n100.0\n\n\nintermediate\n32\n8\n32\n0\n25.0\n100.0\n0.0\n\n\nlow\n2\n0\n0\n1\n0.0\n0.0\n50.0\n\n\n\n\n\n\n\n온누리 상품권은 사용안하는 곳은 null값이니까 그대로 count 쓰면 쓰는 곳만 세어짐 공중화장실, 주차장은 Y/N 이므로, Y만 세려면 Y만 세어줘야 함.\n비율만 뽑아서 봐보기\n\n#group_df.iloc[:,0]\ngroup_df.iloc[:,[0,4,5,6]]\n\n\n\n\n\n\n\n\n\n\nmarket_count\ncertificate_pct\npublic_toilet_pct\nparking_lot_pct\n\n\ntype\nmarket_scale\nlevel\n\n\n\n\n\n\n\n\n상설\nlarge\nhigh\n175\n90.9\n100.0\n100.0\n\n\nintermediate\n84\n90.5\n100.0\n0.0\n\n\nlow\n22\n95.5\n0.0\n31.8\n\n\nmedium\nhigh\n231\n88.7\n100.0\n100.0\n\n\nintermediate\n213\n84.5\n100.0\n0.0\n\n\nlow\n88\n84.1\n0.0\n18.2\n\n\nsmall\nhigh\n100\n68.0\n100.0\n100.0\n\n\nintermediate\n80\n63.7\n100.0\n0.0\n\n\nlow\n9\n88.9\n0.0\n33.3\n\n\n상설+정기\nlarge\nhigh\n53\n96.2\n100.0\n100.0\n\n\nintermediate\n10\n100.0\n100.0\n0.0\n\n\nlow\n3\n100.0\n0.0\n0.0\n\n\nmedium\nhigh\n99\n92.9\n100.0\n100.0\n\n\nintermediate\n39\n84.6\n100.0\n0.0\n\n\nlow\n7\n100.0\n0.0\n28.6\n\n\nsmall\nhigh\n40\n70.0\n100.0\n100.0\n\n\nintermediate\n8\n62.5\n100.0\n0.0\n\n\n정기\nlarge\nhigh\n13\n92.3\n100.0\n100.0\n\n\nintermediate\n2\n100.0\n100.0\n0.0\n\n\nmedium\nhigh\n36\n77.8\n100.0\n100.0\n\n\nintermediate\n10\n40.0\n100.0\n0.0\n\n\nsmall\nhigh\n83\n41.0\n100.0\n100.0\n\n\nintermediate\n32\n25.0\n100.0\n0.0\n\n\nlow\n2\n0.0\n0.0\n50.0"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "myblog",
    "section": "",
    "text": "hw1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\n정은서\n\n\n\n\n\n\n\n\n\n\n\n\nhw2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\n정은서\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/hw2/index.html",
    "href": "posts/hw2/index.html",
    "title": "hw2",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\ndf = pd.read_csv('../../mpg.csv')\npd.set_option('display.max_columns', None)\n\ndf.assign(type = np.where(df['displ']&lt;=4, '4이하', np.where(df['displ']&gt;=5, '5이상', '기타'))).groupby('type').agg(type_mean = ('hwy','mean'))\n\n\n\n\n\n\n\n\ntype_mean\n\n\ntype\n\n\n\n\n\n4이하\n25.963190\n\n\n5이상\n18.078947\n\n\n기타\n17.151515\n\n\n\n\n\n\n\n4이하 가 5이상보다 평균이 높다는 것을 알 수 있다.\n\n\n\nprint(\"4이하인 경우 평균 :\",df.query('displ &lt;= 4')['hwy'].mean())\nprint(\"5이상인 경우 평균 :\",df.query('displ &gt;=5')['hwy'].mean())\n\n4이하인 경우 평균 : 25.96319018404908\n5이상인 경우 평균 : 18.07894736842105"
  },
  {
    "objectID": "posts/hw2/index.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "posts/hw2/index.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "hw2",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\ndf = pd.read_csv('../../mpg.csv')\npd.set_option('display.max_columns', None)\n\ndf.assign(type = np.where(df['displ']&lt;=4, '4이하', np.where(df['displ']&gt;=5, '5이상', '기타'))).groupby('type').agg(type_mean = ('hwy','mean'))\n\n\n\n\n\n\n\n\ntype_mean\n\n\ntype\n\n\n\n\n\n4이하\n25.963190\n\n\n5이상\n18.078947\n\n\n기타\n17.151515\n\n\n\n\n\n\n\n4이하 가 5이상보다 평균이 높다는 것을 알 수 있다.\n\n\n\nprint(\"4이하인 경우 평균 :\",df.query('displ &lt;= 4')['hwy'].mean())\nprint(\"5이상인 경우 평균 :\",df.query('displ &gt;=5')['hwy'].mean())\n\n4이하인 경우 평균 : 25.96319018404908\n5이상인 경우 평균 : 18.07894736842105"
  },
  {
    "objectID": "posts/hw2/index.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시연비-평균이-더-높은지-알아보세요.",
    "href": "posts/hw2/index.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시연비-평균이-더-높은지-알아보세요.",
    "title": "hw2",
    "section": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시연비) 평균이 더 높은지 알아보세요.",
    "text": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시연비) 평균이 더 높은지 알아보세요.\n\ndf.groupby('manufacturer', as_index=False).agg(cty_mean = ('cty', 'mean')).query(\"manufacturer == 'audi' | manufacturer=='toyota'\")\n\n\n\n\n\n\n\n\nmanufacturer\ncty_mean\n\n\n\n\n0\naudi\n17.611111\n\n\n13\ntoyota\n18.529412\n\n\n\n\n\n\n\ntoyota 제조회사가 도시연비 평균이 더 높다.\n\n다른 방법\n\ndf.groupby('manufacturer', as_index=False).agg(cty_mean = ('cty', 'mean')).query(\"manufacturer in ['audi','toyota']\")\n\n\n\n\n\n\n\n\nmanufacturer\ncty_mean\n\n\n\n\n0\naudi\n17.611111\n\n\n13\ntoyota\n18.529412"
  },
  {
    "objectID": "posts/hw2/index.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해-보세요.",
    "href": "posts/hw2/index.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해-보세요.",
    "title": "hw2",
    "section": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.",
    "text": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\nprint(\"세 회사 데이터에 대한 hwy 전체 평균 :\",df.query(\"manufacturer in ['chevrolet','ford','honda']\")['hwy'].mean())\n\n세 회사 데이터에 대한 hwy 전체 평균 : 22.50943396226415"
  },
  {
    "objectID": "posts/hw2/index.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "href": "posts/hw2/index.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "title": "hw2",
    "section": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.",
    "text": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nprint(\"=\"*70, \"\\n 1. audi 중 hwy가 높은 순의 자동차 모델 \\n\")\ndf.query('manufacturer == \"audi\"').groupby('model').agg(hwy_mean = ('hwy' , 'mean'))\n\n====================================================================== \n 1. audi 중 hwy가 높은 순의 자동차 모델 \n\n\n\n\n\n\n\n\n\n\nhwy_mean\n\n\nmodel\n\n\n\n\n\na4\n28.285714\n\n\na4 quattro\n25.750000\n\n\na6 quattro\n24.000000\n\n\n\n\n\n\n\n\nprint(\"\\n\",\"=\"*70, \"\\n 2. audi 중 hwy가 1~5위인 자동차 데이터 \\n\")\ndf.query('manufacturer == \"audi\"').sort_values('hwy', ascending=False).head(5)\n\n\n ====================================================================== \n 2. audi 중 hwy가 1~5위인 자동차 데이터 \n\n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "posts/hw2/index.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "href": "posts/hw2/index.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "title": "hw2",
    "section": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.",
    "text": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\nmpg = df.copy()\nmpg= mpg.assign(sum_cty_hwy = mpg['cty']+mpg['hwy'])\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum_cty_hwy\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42"
  },
  {
    "objectID": "posts/hw2/index.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "href": "posts/hw2/index.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "title": "hw2",
    "section": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.",
    "text": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.\n\nmpg = mpg.assign(avg_cty_hwy = mpg['sum_cty_hwy']/2)\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum_cty_hwy\navg_cty_hwy\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0"
  },
  {
    "objectID": "posts/hw2/index.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "href": "posts/hw2/index.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "title": "hw2",
    "section": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.",
    "text": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nmpg.sort_values('avg_cty_hwy', ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum_cty_hwy\navg_cty_hwy\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw2/index.html#번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "href": "posts/hw2/index.html#번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "title": "hw2",
    "section": "1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.",
    "text": "1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.\n\ndf.assign(sum_cty_hwy = df['cty']+df['hwy']\n          , avg_cty_hwy = lambda x: x['sum_cty_hwy']/2) \\\n    .sort_values('avg_cty_hwy', ascending=False) \\\n    .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum_cty_hwy\navg_cty_hwy\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw1/index.html",
    "href": "posts/hw1/index.html",
    "title": "hw1",
    "section": "",
    "text": "24.07.15"
  },
  {
    "objectID": "posts/hw1/index.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "posts/hw1/index.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.",
    "text": "다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.\n\nimport pandas as pd\n\ndf = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n                   '가격' : [1800, 1500, 3000],\n                   '판매량' : [24,38,13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "posts/hw1/index.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "posts/hw1/index.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "hw1",
    "section": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nimport numpy as np\n\n# 가격 평균\nprint(\"가격 평균 : \",np.mean(df['가격']))\n\n#판매량 평균\nprint(\"판매량 평균 : \",np.mean(df['판매량']))\n\n가격 평균 :  2100.0\n판매량 평균 :  25.0"
  },
  {
    "objectID": "posts/hw1/index.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "href": "posts/hw1/index.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "title": "hw1",
    "section": "mpg 데이터를 불러와 복사본을 만드세요.",
    "text": "mpg 데이터를 불러와 복사본을 만드세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('../../mpg.csv')\n\ndf_copy = df.copy()\ndf_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/index.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "posts/hw1/index.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "hw1",
    "section": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\ndf_copy=df_copy.rename(columns={'cty' : 'city', 'hwy' : 'highway'})\ndf_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/index.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "href": "posts/hw1/index.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해-보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "title": "hw1",
    "section": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.",
    "text": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\ndf_copy.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "posts/hw1/index.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "posts/hw1/index.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "hw1",
    "section": "midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nimport pandas as pd\n\nmidwest = pd.read_csv('../../midwest.csv')\nmidwest.head()\n\n#pd.set_option('display.max_columns', None)\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n결측치가 하나도 없는 데이터이다. 범주 컬럼은 3개이고, 그 외에는 다 수치컬럼이다."
  },
  {
    "objectID": "posts/hw1/index.html#poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정",
    "href": "posts/hw1/index.html#poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정",
    "title": "hw1",
    "section": "poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정",
    "text": "poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정\n\nmidwest = midwest.rename(columns = {'poptotal' : 'total', 'popasian' : 'asian'})\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns"
  },
  {
    "objectID": "posts/hw1/index.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "href": "posts/hw1/index.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "title": "hw1",
    "section": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.",
    "text": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nmidwest['pct'] = (midwest['asian']/midwest['total'])*100\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npct\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\nimport matplotlib.pyplot as plt\n\nplt.clf()\nmidwest['pct'].plot.hist()\nplt.show()"
  },
  {
    "objectID": "posts/hw1/index.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "href": "posts/hw1/index.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "title": "hw1",
    "section": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.",
    "text": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nimport numpy as np\n\nprint( \"아시아 인구 백분율 전체 평균 :\",np.mean(midwest['pct']) )\n\n아시아 인구 백분율 전체 평균 : 0.4872461834357345\n\n\n\nmidwest['size'] = np.where(midwest['pct'] &gt; np.mean(midwest['pct']) , 'large', 'small')\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npct\nsize\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n\n\n5 rows × 30 columns"
  },
  {
    "objectID": "posts/hw1/index.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "posts/hw1/index.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "hw1",
    "section": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nplt.clf()\nmidwest['size'].value_counts().plot.bar(rot=0)\nplt.show()"
  },
  {
    "objectID": "project1.html#점포수-요약-정보-알아보기",
    "href": "project1.html#점포수-요약-정보-알아보기",
    "title": "project1",
    "section": "",
    "text": "market2[['market_count']].describe()\n\n\n\n\n\n\n\n\nmarket_count\n\n\n\n\ncount\n1439.000000\n\n\nmean\n143.907575\n\n\nstd\n298.989963\n\n\nmin\n0.000000\n\n\n25%\n50.000000\n\n\n50%\n80.000000\n\n\n75%\n134.000000\n\n\nmax\n5852.000000\n\n\n\n\n\n\n\n점포수 위주로 봤을 때, 25%, 75% 기준으로 점포 사이즈를 나누는 것이 합리적으로 보인다. samll : 50개 미만 medium : 50개 이상 134개 미만 large : 134개 이상 3가지의 범주로 나누고자 한다."
  },
  {
    "objectID": "project1.html#지역도-변수-만들기",
    "href": "project1.html#지역도-변수-만들기",
    "title": "project1",
    "section": "",
    "text": "'''first_tokens = []\n\n# for loop을 사용하여 각 행의 첫 음절 추출\nfor address in market2['address_old']:\n    first_token = address.split()[0]+ address.split()[1] # 띄어쓰기를 기준으로 나눈 후 첫 번째 토큰을 추출\n    first_tokens.append(first_token)\n\n# 추출한 첫 음절을 새로운 컬럼으로 추가\nmarket2['town_city'] = first_tokens\nmarket2.head()\n\n# market2['address_old'].split()[0] + '''\n\n\"first_tokens = []\\n\\n# for loop을 사용하여 각 행의 첫 음절 추출\\nfor address in market2['address_old']:\\n    first_token = address.split()[0]+ address.split()[1] # 띄어쓰기를 기준으로 나눈 후 첫 번째 토큰을 추출\\n    first_tokens.append(first_token)\\n\\n# 추출한 첫 음절을 새로운 컬럼으로 추가\\nmarket2['town_city'] = first_tokens\\nmarket2.head()\\n\\n# market2['address_old'].split()[0] + \"\n\n\n\n# market2['town'].value_counts()"
  },
  {
    "objectID": "project1.html#지역동읍-변수-만들기",
    "href": "project1.html#지역동읍-변수-만들기",
    "title": "project1",
    "section": "",
    "text": "'''second_tokens = []\n\n# for loop을 사용하여 각 행의 첫 음절 추출\nfor address in market2['address_old']:\n    second_token = address.split()[1]  # 띄어쓰기를 기준으로 나눈 후 첫 번째 토큰을 추출\n    second_tokens.append(second_token)\n\n# 추출한 첫 음절을 새로운 컬럼으로 추가\nmarket2['city'] = second_tokens\nmarket2.head()'''\n\n\"second_tokens = []\\n\\n# for loop을 사용하여 각 행의 첫 음절 추출\\nfor address in market2['address_old']:\\n    second_token = address.split()[1]  # 띄어쓰기를 기준으로 나눈 후 첫 번째 토큰을 추출\\n    second_tokens.append(second_token)\\n\\n# 추출한 첫 음절을 새로운 컬럼으로 추가\\nmarket2['city'] = second_tokens\\nmarket2.head()\"\n\n\n\n# market2['city'].value_counts()"
  },
  {
    "objectID": "project1.html#상설정기-시장의-지역-봐보기",
    "href": "project1.html#상설정기-시장의-지역-봐보기",
    "title": "project1",
    "section": "",
    "text": "market2.query('type == \"상설+정기\"').head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\n\n\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n\n\n7\n간성시장\n상설+정기\n강원도 고성군 간성시장 2길 11-1\n5일\n강원 고성군 간성읍 신안리 262번지\n89\n온누리상품권\nY\nY\n2003.0\n2015-12-31\nmedium\nhigh\n\n\n8\n거진시장\n상설+정기\n강원도 고성군 거진읍 거진시장길 15\n5일\n강원 고성군 거진읍 거진리 272번지\n51\n온누리상품권\nY\nY\n2010.0\n2015-12-31\nmedium\nhigh\n\n\n9\n북평민속시장\n상설+정기\n강원도 동해시 북평 오일장길 32\n5일\n강원 동해시 구미동 497-11번지 일원\n130\n온누리상품권\nY\nY\n2013.0\n2015-12-31\nmedium\nhigh\n\n\n15\n삼척중앙시장\n상설+정기\n강원도 삼척시 진주로 12-21\n5일\n강원 삼척시 남양동 55-4\n299\n온누리상품권\nY\nY\n2014.0\n2015-12-31\nlarge\nhigh"
  },
  {
    "objectID": "project1.html#시도-변수-만들기",
    "href": "project1.html#시도-변수-만들기",
    "title": "project1",
    "section": "",
    "text": "first_tokens = []\ni=0\n\n# for loop을 사용하여 각 행의 첫 음절 추출\nfor address in market2['address_old']:\n    first_token = market2['address_old'][i].split()[0] +' ' + market2['address_old'][i].split()[1] # 띄어쓰기를 기준으로 나눈 후 첫 번째 토큰을 추출\n    first_tokens.append(first_token)\n    i += 1\n\n# 추출한 첫 음절을 새로운 컬럼으로 추가\nmarket2['town_city'] = first_tokens\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\ntown_city\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원 강릉시\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원 강릉시\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원 강릉시"
  },
  {
    "objectID": "project1.html#지역별로-시장-수-알아보기",
    "href": "project1.html#지역별로-시장-수-알아보기",
    "title": "project1",
    "section": "",
    "text": "pd.set_option('display.max_rows', None)\nmarket2['town_city'].value_counts()\n\ntown_city\n경남 창원시     59\n경북 포항시     34\n부산 부산진구    26\n대구 달서구     23\n경기 성남시     22\n서울 중구      21\n대구 북구      20\n부산 수영구     19\n경기 수원시     19\n경기 부천시     19\n서울 동대문구    18\n제주 제주시     17\n대구 중구      16\n울산 중구      16\n경북 구미시     16\n부산 중구      15\n대구 동구      15\n경북 경주시     15\n부산 사하구     15\n전남 여수시     15\n부산 사상구     14\n경남 진주시     13\n대전 동구      13\n대구 남구      13\n충북 청주시     13\n서울 관악구     13\n부산 동래구     12\n충북 충주시     12\n경북 영주시     12\n부산 남구      11\n전북 익산시     11\n부산 해운대구    11\n서울 중랑구     11\n서울 영등포구    11\n서울 강북구     11\n서울 강서구     11\n서울 마포구     10\n경남 거제시     10\n대구 서구      10\n서울 강동구     10\n서울 광진구     10\n울산 남구       9\n인천 남구       9\n부산 서구       9\n서울 성북구      9\n서울 양천구      9\n서울 동작구      9\n경기 안양시      9\n경북 안동시      9\n서울 은평구      9\n대구 수성구      9\n경남 하동군      8\n광주 서구       8\n울산 울주군      8\n서울 종로구      8\n서울 서대문구     8\n부산 금정구      8\n전남 보성군      8\n충남 금산군      8\n부산 동구       8\n전북 군산시      8\n강원 춘천시      8\n제주 서귀포시     8\n인천 부평구      7\n인천 동구       7\n부산 연제구      7\n대전 중구       7\n서울 용산구      7\n경남 사천시      7\n강원 강릉시      7\n강원 원주시      7\n경북 의성군      7\n경남 양산시      7\n충북 제천시      7\n전남 목포시      7\n전남 순천시      7\n충남 천안시      7\n충남 예산군      7\n인천 서구       6\n전남 고흥군      6\n전남 나주시      6\n서울 송파구      6\n경기 파주시      6\n전남 해남군      6\n전남 광양시      6\n전북 고창군      6\n울산 동구       6\n부산 북구       6\n인천 남동구      6\n경북 예천군      6\n경북 울진군      6\n경남 김해시      6\n경북 상주시      6\n광주 북구       6\n광주 광산구      6\n경남 밀양시      6\n경북 청송군      5\n경기 평택시      5\n전남 장흥군      5\n전남 영암군      5\n서울 구로구      5\n전북 전주시      5\n충북 음성군      5\n충북 보은군      5\n충남 보령시      5\n충남 논산시      5\n전남 화순군      5\n경북 문경시      5\n경남 합천군      5\n경남 함양군      5\n경남 산청군      5\n서울 강남구      5\n경남 창녕군      5\n충북 괴산군      4\n대전 대덕구      4\n서울 성동구      4\n충남 홍성군      4\n충남 서산시      4\n전남 완도군      4\n전북 김제시      4\n강원 정선군      4\n경남 남해군      4\n경남 고성군      4\n경기 화성시      4\n충북 단양군      4\n전남 함평군      4\n전북 임실군      4\n전북 무주군      4\n서울 도봉구      4\n세종 세종시      4\n경남 함안군      4\n경북 군위군      4\n경북 영덕군      4\n경북 청도군      4\n광주 동구       4\n경기 동두천시     4\n경기 김포시      4\n강원 삼척시      4\n강원 철원군      4\n경기 시흥시      4\n강원 평창군      4\n경기 고양시      4\n강원 영월군      3\n경기 안성시      3\n경기 양평군      3\n강원 동해시      3\n전북 장수군      3\n경남 통영시      3\n경북 영천시      3\n경기 의정부시     3\n경북 경산시      3\n대구 달성군      3\n전남 진도군      3\n충남 태안군      3\n인천 강화군      3\n부산 진구       3\n부산 영도구      3\n서울 금천구      3\n인천 계양구      3\n인천 중구       3\n충남 공주시      3\n전북 순창군      3\n전남 영광군      3\n전북 정읍시      3\n충남 부여군      3\n충남 당진시      3\n전남 무안군      3\n전남 장성군      3\n전북 남원시      3\n전북 완주군      3\n전남 강진군      3\n전남 구례군      3\n전남 곡성군      3\n강원 고성군      2\n대전 서구       2\n인천 연수구      2\n서울 서초구      2\n경북 칠곡군      2\n경기 용인시      2\n경기 광명시      2\n경기 과천시      2\n경기 군포시      2\n강원 인제군      2\n강원 속초시      2\n강원 홍천군      2\n강원 태백시      2\n경기 포천시      2\n경기 하남시      2\n경남 의령군      2\n광주 남구       2\n경북 성주군      2\n경북 봉화군      2\n경북 김천시      2\n경기 이천시      2\n충북 진천군      2\n충남 아산시      2\n충북 영동군      2\n충남 청양군      2\n충북 청원군      2\n전북 부안군      2\n전남 담양군      2\n충남 서천군      2\n충북 옥천군      2\n서울 노원구      2\n강원 양구군      1\n강원 화천군      1\n경기 광주시      1\n경기 구리시      1\n경기 가평군      1\n강원 양양군      1\n경북 고령군      1\n경북 영양군      1\n경기 여주시      1\n경남 거창군      1\n경기 오산시      1\n경기 연천군      1\n경기 의왕시      1\n경기 안산시      1\n강원 횡성군      1\n부산 강서구      1\n대전 유성구      1\n부산 기장군      1\n울산 북구       1\n전남 신안군      1\n전북 진안군      1\n충북 증평군      1\nName: count, dtype: int64"
  },
  {
    "objectID": "project1.html#관광형-상설정기-시장이-있는-지역-알아보기",
    "href": "project1.html#관광형-상설정기-시장이-있는-지역-알아보기",
    "title": "project1",
    "section": "",
    "text": "market4 = market2.query('type == \"상설+정기\"')\nmarket4['town_city'].value_counts()\n\ntown_city\n경북 경주시     7\n경북 울진군     6\n경남 창원시     5\n전북 익산시     5\n충북 보은군     5\n충북 음성군     5\n경남 하동군     4\n경기 파주시     4\n경기 평택시     4\n경북 안동시     4\n강원 철원군     4\n세종 세종시     4\n울산 울주군     4\n경북 포항시     4\n충남 금산군     4\n충남 천안시     4\n충북 괴산군     4\n충남 보령시     4\n충남 논산시     4\n강원 평창군     4\n경기 화성시     4\n전남 고흥군     4\n경북 영덕군     3\n경북 경산시     3\n경북 구미시     3\n경기 안성시     3\n강원 정선군     3\n경북 영천시     3\n경북 예천군     3\n경북 청송군     3\n경남 합천군     3\n충남 당진시     3\n충북 제천시     3\n충북 충주시     3\n전북 무주군     3\n충남 홍성군     3\n충북 단양군     3\n전북 정읍시     2\n충남 공주시     2\n전남 무안군     2\n전북 김제시     2\n전남 장흥군     2\n전북 완주군     2\n경남 의령군     2\n경남 사천시     2\n경북 군위군     2\n경북 문경시     2\n경남 창녕군     2\n경남 밀양시     2\n경남 양산시     2\n경남 김해시     2\n경남 남해군     2\n강원 인제군     2\n강원 원주시     2\n강원 고성군     2\n강원 홍천군     2\n경북 김천시     2\n경북 봉화군     2\n경북 상주시     2\n충남 청양군     2\n충북 영동군     2\n충북 청원군     2\n충남 예산군     2\n충남 서천군     2\n대구 달성군     2\n대구 북구      2\n전북 남원시     2\n울산 중구      2\n경기 성남시     1\n경기 안산시     1\n경기 양평군     1\n경기 하남시     1\n경남 고성군     1\n경남 산청군     1\n경남 진주시     1\n강원 춘천시     1\n강원 삼척시     1\n강원 양구군     1\n강원 화천군     1\n경기 가평군     1\n경기 고양시     1\n경기 광주시     1\n강원 횡성군     1\n경기 동두천시    1\n경기 오산시     1\n경기 용인시     1\n경기 이천시     1\n경기 여주시     1\n강원 양양군     1\n강원 동해시     1\n강원 강릉시     1\n경북 영양군     1\n경북 성주군     1\n경남 함양군     1\n경남 함안군     1\n경남 거창군     1\n울산 북구      1\n전남 나주시     1\n경북 영주시     1\n광주 북구      1\n경북 칠곡군     1\n대구 동구      1\n대구 중구      1\n대전 대덕구     1\n부산 북구      1\n부산 사하구     1\n서울 은평구     1\n전북 고창군     1\n전남 순천시     1\n전남 여수시     1\n전남 영광군     1\n전남 강진군     1\n전북 임실군     1\n전북 장수군     1\n전북 진안군     1\n충남 아산시     1\n충남 서산시     1\n충남 부여군     1\n충남 태안군     1\n충북 증평군     1\n충북 옥천군     1\n충북 진천군     1\n충북 청주시     1\nName: count, dtype: int64\n\n\nhttps://www.bigdata-culture.kr/bigdata/user/data_market/detail.do?id=359f0000-4129-11ec-a107-3b8bd6a15b10 관심있는 지역"
  },
  {
    "objectID": "project1.html#인구-데이터-groupby",
    "href": "project1.html#인구-데이터-groupby",
    "title": "project1",
    "section": "",
    "text": "import pandas as pd\npop = pd.read_excel('market_pop.xlsx')\npop.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\nadress_road\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\nregion\nage_under_20\nage_2050\nage_over_60\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원도\n18.996236\n57.71184\n23.291924\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원도\n18.996236\n57.71184\n23.291924\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원도\n18.996236\n57.71184\n23.291924\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원도\n18.996236\n57.71184\n23.291924\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원도\n18.996236\n57.71184\n23.291924"
  },
  {
    "objectID": "project1.html#지역별-연령-범주별-해당-인구-수지역-인구-수100-값",
    "href": "project1.html#지역별-연령-범주별-해당-인구-수지역-인구-수100-값",
    "title": "project1",
    "section": "",
    "text": "pop_group = pop.groupby('region', as_index = False).agg(age_under_20 = ('age_under_20','min')\n                         , age_2050 = ('age_2050', 'min')\n                         , age_over_60 = ('age_over_60', 'min'))\npop_group\n\n\n\n\n\n\n\n\nregion\nage_under_20\nage_2050\nage_over_60\n\n\n\n\n0\n강원도\n18.996236\n57.711840\n23.291924\n\n\n1\n경기도\n21.808344\n62.918054\n15.273602\n\n\n2\n경상남도\n20.868237\n59.572973\n19.558790\n\n\n3\n경상북도\n18.525832\n57.134052\n24.340117\n\n\n4\n광주광역시\n23.142591\n60.802718\n16.054691\n\n\n5\n대구광역시\n20.005595\n61.407557\n18.586848\n\n\n6\n대전광역시\n21.728893\n62.230482\n16.040625\n\n\n7\n부산광역시\n17.437931\n60.857391\n21.704678\n\n\n8\n서울특별시\n17.651737\n63.912396\n18.435867\n\n\n9\n세종특별시\n25.238046\n59.895488\n14.866467\n\n\n10\n울산광역시\n21.831408\n64.150336\n14.018256\n\n\n11\n인천광역시\n20.380236\n63.853490\n15.766274\n\n\n12\n전라남도\n19.282335\n54.060092\n26.657573\n\n\n13\n전라북도\n20.197613\n55.962285\n23.840101\n\n\n14\n제주도\n22.501141\n58.640284\n18.858575\n\n\n15\n충청남도\n20.525604\n57.425821\n22.048575\n\n\n16\n충청북도\n20.325553\n59.036953\n20.637494"
  },
  {
    "objectID": "project1.html#address_new에서-시도-값-분리해서-city-변수-만들기",
    "href": "project1.html#address_new에서-시도-값-분리해서-city-변수-만들기",
    "title": "project1",
    "section": "",
    "text": "first_tokens=[]\n\nfor address in market2['address_new']:\n    first_token = address.split()[0]\n    first_tokens.append(first_token)\n    \nmarket2['region'] = first_tokens\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\ntown_city\nregion\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원 강릉시\n강원도\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원 강릉시\n강원도\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원 강릉시\n강원도"
  },
  {
    "objectID": "project1.html#두-데이터셋-조인",
    "href": "project1.html#두-데이터셋-조인",
    "title": "project1",
    "section": "",
    "text": "market_pop = pd.merge(market2, pop_group, how='left', on='region')\nmarket_pop.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\ntown_city\nregion\nage_under_20\nage_2050\nage_over_60\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원 강릉시\n강원도\n18.996236\n57.71184\n23.291924\n\n\n\n\n\n\n\n\n#market_pop.to_excel(excel_writer='market_join.xlsx')"
  },
  {
    "objectID": "project1.html#address_new에서-시도-값-분리해서-region-변수-만들기",
    "href": "project1.html#address_new에서-시도-값-분리해서-region-변수-만들기",
    "title": "project1",
    "section": "",
    "text": "first_tokens=[]\n\nfor address in market2['address_new']:\n    first_token = address.split()[0]\n    first_tokens.append(first_token)\n    \nmarket2['region'] = first_tokens\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\naddress_new\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\ntown_city\nregion\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원 강릉시\n강원도\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원 강릉시\n강원도\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원 강릉시\n강원도\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원 강릉시\n강원도"
  }
]
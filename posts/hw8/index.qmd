---
title: "hw7"
subtile: "ADP 표본점수, 카이제곱분포와 표본분산"
author: "정은서"
date: "2024/09/02"
editor: visual
jupyter: python3
---

# 1. ADP 표본점수  


## 2022년에 실시 된 ADP 실기 시험의 통계파트 표준점수는 평균이 30, 표준편차가 5인 정규분포를 따른다고 한다.    
#### 1) ADP 실기 시험의 통계파트 표준점수의 밀도함수를 그려보세요.  
```{python}
import numpy as np
from scipy.stats import norm
import matplotlib.pyplot as plt

x = np.linspace(0, 60, 100)
y = norm.pdf(x, loc=30, scale=5)
plt.clf()
plt.plot(x,y)
plt.show()
```

#### 2) ADP 수험생을 임의로 1명을 선택하여 통계 점수를 조회했을때 45점 보다 높은 점수를 받았을 확률을 구하세요.
```{python}
# X ~ N(30,5^2) 일 때, p(X > 45) 구해라.
print("45점 보다 높은 점수를 받았을 확률 :",1- norm.cdf(45, loc=30, scale=5))
```

#### 3) 슬통이는 상위 10%에 해당하는 점수를 얻었다고 한다면, 슬통이의 점수는 얼마인지 계산해보세요.
```{python}
print("상위 10%에 해당하는 점수 :",norm.ppf(0.9, loc=30, scale=5))
```

#### 4) 슬기로운 통계생활의 해당 회차 수강생은 16명이었다고 한다. 16명의 통계 파트 점수를 평균 내었을 때, 이 평균값이 따르는 분포의 확률밀도 함수를 1번의 그래프와 겹쳐 그려보세요.
```{python}
x = np.linspace(0, 60, 100)
y = norm.pdf(x, loc=30, scale=5)
y2 = norm.pdf(x, loc=30, scale=5/np.sqrt(16))


plt.clf()
plt.rcParams['font.family'] = 'Malgun Gothic'
plt.plot(x,y, label='점수의 확률 밀도 함수')
plt.plot(x, y2, label='16명의 평균 점수의 확률 밀도 함수')
plt.legend()
plt.show()


print()
```

#### 5) 슬기로운 통계생활 ADP 반 수강생들의 통계점수를 평균내었다고 할 때, 이 값이 38점보다 높게 나올 확률을 구하세요.  
```{python}
# X_bar ~ N(30, (5/sqrt(16))^2) 일 때, p(X_bar > 38) 구해라.
print("38점 보다 높은 점수를 받았을 확률 :",1- norm.cdf(38, loc=30, scale=5/np.sqrt(16)))
```
#  



# 2. 코비드 19 발병률
## Covid‑19의 발병률은 1%라고 한다. 다음은 이번 코로나 사태로 인하여 코로나 의심 환자들 1,085명을 대상으로 슬통 회사의 “다잡아” 키트를 사용하여 양성 반응을 체크한 결과이다.

#### 1) 다잡아 키트가 코로나 바이러스에 걸린 사람을 양성으로 잡아낼 확률을 계산하세요.
```{python}
#| echo: false
print("p(키트 양성 | 실제 양성) = 370 / (370 + 15) = ", 370 / (370+15))
```



#### 2) 슬통 회사에서 다잡아 키트를 사용해 양성으로 나온 사람이 실제로는 코로나 바이러스에 걸려 있을 확률을 97%라며, 키트의 우수성을 주장했다. 이 주장이 옳지 않은 이유를 서술하세요.
실제로는 코로나 걸릴 확률이 0.01인데, 슬통 회사가 조사한 자료에 의하면 코로나 걸릴 확률이 0.35으로 실제와 차이가 커서 키트의 우수성을 주장하기가 어렵다.
```{python}
#| echo: false
print("p(조사된 코로나 걸릴 확률) = 실제 양성인 사람 수 / 전체 사람 수  = (370 + 15) / (370 + 10 + 15 + 690) = ", (370 + 15) / (370 + 10 + 15 + 690))
print("p(실제 코로나 걸릴 확률) = ", 0.01)
```

#### 3) Covid‑19 발병률을 사용하여, 키트의 결과값이 양성으로 나온 사람이 실제로 코로나 바이러스에 걸려있을 확률을 구하세요.  
```{python}
#| echo: false
print("p(실제 양성 | 키트 양성) \n= p(실제 양성 동시에 키트 양성) / p(키트 양성) \n= p(실제 양성)*p(키트 양성 | 실제 양성) / {p(실제 양성)*p(키트 양성 | 실제 양성) + p(실제 음성)*p(키트 양성 | 실제 음성)} \n= 0.01*370/(370+15) / {0.01*370/(370+15) + (1-0.01)*10/(10+690)} \n=", (0.01*370/(370+15)) / (0.01*370/(370+15) + (1-0.01)*10/(10+690)))
```




#  






# 카이제곱분포와 표본분산

#### 1) 자유도가 4인 카이제곱분포의 확률밀도함수를 그려보세요.
```{python}
from scipy.stats import chi2

x = np.linspace(0,20, 100)
y = chi2.pdf(x, df=4)

plt.clf()
plt.plot(x,y)
plt.show()
```

#### 2) 𝑃 (3 ≤ 𝑋 ≤ 5) 확률을 구해보세요.
```{python}
print("p(3<= X <=5) :",chi2.cdf(5, df=4) - chi2.cdf(3, df=4) )
```

#### 3) 자유도가 4인 카이제곱분포에서 크기가 1000인 표본을 뽑은 후, 히스토그램을 그려보세요.
```{python}
x = chi2.rvs(df=4, size=1000, random_state=20240902)

plt.clf()
plt.hist(x, density=True)
plt.show()
```

#### 4) 자유도가 4인 카이제곱분포를 따르는 확률변수에서 나올 수 있는 값 중 상위 5%에 해당하는 값은 얼마인지 계산해보세요.
```{python}
print("상위 5%에 해당하는 값 :", chi2.ppf(0.95, df=4))
```

#### 5) 3번에서 뽑힌 표본값들 중 상위 5%에 위치한 표본의 값은 얼마인가요?
```{python}
x = chi2.rvs(df=4, size=1000, random_state=20240902)
print("상위 5%에 위치한 표본의 값 :", np.percentile(x, 95))
```

#### 6) 평균이 3, 표준편차가 2인 정규분포를 따르는 확률변수에서 크기가 20인 표본, 𝑥1, ..., 𝑥20,을 뽑은 후 표본분산을 계산한 것을 s1^2 이라 생각해보죠. 다음을 수행해보세요!
• 같은 방법으로 500개의 s^2 들, s1^2, s2^2, ... , s500^2 발생시킵니다.  
• 발생한 500개의 s^2 들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. (히스토그램을 그릴 때 probability = TRUE 옵션을 사용해서 그릴 것)  
• 위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요.  
```{python}
x = norm.rvs(loc=3, scale=2, size=20*500, random_state=20240902)
x = x.reshape(-1,20)
si2 = np.var(x, axis=1, ddof=1)

x1 = np.linspace(0,43,100)
y1 = chi2.pdf(x1, df=19)

plt.clf()
plt.hist(si2*4.75, density = True , label = '4.75* s^2의 히스토그램')
plt.plot(x1, y1, label='df=19인 카이제곱분포 확률밀도함수')
plt.legend()
plt.show()
```


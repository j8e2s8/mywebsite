{
  "hash": "858f19ae3a0f8a3520c17e4dff16e8a3",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"house price columns\"\nauthor: \"정은서\"\nformat: html\neditor: visual\njupyter: python3\n---\n\n\n\n\n\n## 데이터 불러오기\n\n::: {#ff8e62d9 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n#from sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# 데이터 불러오기\ntrain_df = pd.read_csv('../../../lsbigdata-project1/house price/houseprice-with-lonlat.csv')\ntrain_df['Id'] = np.arange(len(train_df) )\ntest_df = pd.read_csv('../../../lsbigdata-project1/house price/test.csv')\nsubmission = pd.read_csv('../../../lsbigdata-project1/house price/sample_submission.csv')\n```\n:::\n\n\n# \n\n## 0. 모든 변수 결측치와 정보 확인\n\n::: {#ac25d721 .cell execution_count=2}\n``` {.python .cell-code}\npd.set_option('display.max_rows',None)\nnan_df = train_df.isna().sum()\nnan_df[nan_df>0]\npd.reset_option('display.max_rows')\n```\n:::\n\n\n::: {#8ba3a5d5 .cell execution_count=3}\n``` {.python .cell-code}\ntrain_df.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 2930 entries, 0 to 2929\nData columns (total 76 columns):\n #   Column              Non-Null Count  Dtype  \n---  ------              --------------  -----  \n 0   Unnamed: 0          2930 non-null   int64  \n 1   MS_SubClass         2930 non-null   object \n 2   MS_Zoning           2930 non-null   object \n 3   Lot_Frontage        2930 non-null   int64  \n 4   Lot_Area            2930 non-null   int64  \n 5   Street              2930 non-null   object \n 6   Alley               2930 non-null   object \n 7   Lot_Shape           2930 non-null   object \n 8   Land_Contour        2930 non-null   object \n 9   Utilities           2930 non-null   object \n 10  Lot_Config          2930 non-null   object \n 11  Land_Slope          2930 non-null   object \n 12  Neighborhood        2930 non-null   object \n 13  Condition_1         2930 non-null   object \n 14  Condition_2         2930 non-null   object \n 15  Bldg_Type           2930 non-null   object \n 16  House_Style         2930 non-null   object \n 17  Overall_Cond        2930 non-null   object \n 18  Year_Built          2930 non-null   int64  \n 19  Year_Remod_Add      2930 non-null   int64  \n 20  Roof_Style          2930 non-null   object \n 21  Roof_Matl           2930 non-null   object \n 22  Exterior_1st        2930 non-null   object \n 23  Exterior_2nd        2930 non-null   object \n 24  Mas_Vnr_Type        1155 non-null   object \n 25  Mas_Vnr_Area        2930 non-null   int64  \n 26  Exter_Cond          2930 non-null   object \n 27  Foundation          2930 non-null   object \n 28  Bsmt_Cond           2930 non-null   object \n 29  Bsmt_Exposure       2930 non-null   object \n 30  BsmtFin_Type_1      2930 non-null   object \n 31  BsmtFin_SF_1        2930 non-null   int64  \n 32  BsmtFin_Type_2      2930 non-null   object \n 33  BsmtFin_SF_2        2930 non-null   int64  \n 34  Bsmt_Unf_SF         2930 non-null   int64  \n 35  Total_Bsmt_SF       2930 non-null   int64  \n 36  Heating             2930 non-null   object \n 37  Heating_QC          2930 non-null   object \n 38  Central_Air         2930 non-null   object \n 39  Electrical          2930 non-null   object \n 40  First_Flr_SF        2930 non-null   int64  \n 41  Second_Flr_SF       2930 non-null   int64  \n 42  Gr_Liv_Area         2930 non-null   int64  \n 43  Bsmt_Full_Bath      2930 non-null   int64  \n 44  Bsmt_Half_Bath      2930 non-null   int64  \n 45  Full_Bath           2930 non-null   int64  \n 46  Half_Bath           2930 non-null   int64  \n 47  Bedroom_AbvGr       2930 non-null   int64  \n 48  Kitchen_AbvGr       2930 non-null   int64  \n 49  TotRms_AbvGrd       2930 non-null   int64  \n 50  Functional          2930 non-null   object \n 51  Fireplaces          2930 non-null   int64  \n 52  Garage_Type         2930 non-null   object \n 53  Garage_Finish       2930 non-null   object \n 54  Garage_Cars         2930 non-null   int64  \n 55  Garage_Area         2930 non-null   int64  \n 56  Garage_Cond         2930 non-null   object \n 57  Paved_Drive         2930 non-null   object \n 58  Wood_Deck_SF        2930 non-null   int64  \n 59  Open_Porch_SF       2930 non-null   int64  \n 60  Enclosed_Porch      2930 non-null   int64  \n 61  Three_season_porch  2930 non-null   int64  \n 62  Screen_Porch        2930 non-null   int64  \n 63  Pool_Area           2930 non-null   int64  \n 64  Pool_QC             2930 non-null   object \n 65  Fence               2930 non-null   object \n 66  Misc_Feature        106 non-null    object \n 67  Misc_Val            2930 non-null   int64  \n 68  Mo_Sold             2930 non-null   int64  \n 69  Year_Sold           2930 non-null   int64  \n 70  Sale_Type           2930 non-null   object \n 71  Sale_Condition      2930 non-null   object \n 72  Sale_Price          2930 non-null   int64  \n 73  Longitude           2930 non-null   float64\n 74  Latitude            2930 non-null   float64\n 75  Id                  2930 non-null   int32  \ndtypes: float64(2), int32(1), int64(33), object(40)\nmemory usage: 1.7+ MB\n```\n:::\n:::\n\n\n'Id' : 수치컬럼에서 제외해야 함.\\\n'MS_SubClass' : 수치컬럼으로 되어있는데, 범주컬럼임.\\\n'Lot_Frontage' : 259개 결측치는 집에 연결된 거리가 없어서 결측치인걸까? 그렇다면 0값으로 처리해주기.\\\n'Alley' : 1369개 결측치는 골목길이 없다는 것임.\n\n# \n\n#### 수치컬럼의 분포 확인 함수\n\n::: {#553d39a6 .cell execution_count=4}\n``` {.python .cell-code}\ndef train_numeric_hist(col):\n    plt.clf()\n    plt.rcParams['font.family'] = 'Malgun Gothic'\n    plt.rcParams['axes.unicode_minus'] = False\n    a = col + \"의 분포\"\n    plt.title(a)\n    plt.tight_layout()\n    sns.histplot(train_df[col], stat='density')\n    plt.show()\n```\n:::\n\n\n#### 수치컬럼과 y컬럼의 관계 확인 함수\n\n::: {#4f2223af .cell execution_count=5}\n``` {.python .cell-code}\ndef train_rel_xy(col):\n    plt.clf()\n    plt.rcParams['font.family'] = 'Malgun Gothic'\n    plt.rcParams['axes.unicode_minus'] = False\n    a = col + \"과 Sale_Price의 관계\"\n    plt.title(a)\n    plt.tight_layout()\n    sns.scatterplot(data=train_df, x=col, y='Sale_Price')\n    plt.show()\n```\n:::\n\n\n#### 범주컬럼의 빈도 확인 함수\n\n::: {#05a09c2c .cell execution_count=6}\n``` {.python .cell-code}\ndef train_cat_count(col):\n    plt.clf()\n    plt.rcParams['font.family'] = 'Malgun Gothic'\n    plt.rcParams['axes.unicode_minus'] = False\n    a = col + \"의 범주별 빈도 확인\"\n    plt.title(a)\n    plt.tight_layout()\n    sns.countplot(train_df[col])\n    plt.show()\n```\n:::\n\n\n#### 범주컬럼의 범주별 분포 비교 함수\n\n::: {#511fb3e3 .cell execution_count=7}\n``` {.python .cell-code}\ndef train_cat_hist(col):\n    plt.clf()\n    plt.rcParams['font.family'] = 'Malgun Gothic'\n    plt.rcParams['axes.unicode_minus'] = False\n    a = col + \"의 범주별 분포 비교\"\n    plt.title(a)\n    plt.tight_layout()\n    cats = train_df[col].value_counts().sort_values().index\n    for i in range(len(cats)):\n        sns.histplot(train_df[train_df[col]==cats[i]]['Sale_Price'], stat='density')\n    plt.show()\n```\n:::\n\n\n#### 범주컬럼의 범주별로 x컬럼과 y컬럼의 관계 확인 함수\n\n::: {#60f5a0cb .cell execution_count=8}\n``` {.python .cell-code}\nWxColourDB = ['black', 'red', 'chocolate','darkorange','darkgoldenrod','olive','plum','lightslategrey','forestgreen','gold','lightseagreen','fuchsia','deepskyblue','slateblue','mediumorchid','navy','hotpink','plum','lightsteelblue','blue','darkturquoise','cyan','green','yellow','darkkhaki','orange']\n                              \ndef train_cat_rel_xy(col1, col2):  # col1 : 수치, col2:범주\n    plt.clf()\n    plt.rcParams['font.family'] = 'Malgun Gothic'\n    plt.rcParams['axes.unicode_minus'] = False\n    a = col1 + \"의\" + col2 + \"범주별 Sale_Price와의 관계 비교\"\n    plt.title(a)\n    plt.tight_layout()\n    cats = train_df[col2].value_counts().sort_values(ascending=False).index\n    \n    for i in range(len(cats)):\n        a = train_df[train_df[col2]==cats[i]][[col1,'Sale_Price']]\n        n = np.random.choice(np.arange(len(WxColourDB)),len(WxColourDB),replace=False)\n        n = n.tolist()[i]\n        sns.scatterplot(data=a, x=col1, y='Sale_Price', color=WxColourDB[n])  # 색 달라져야함\n        plt.show()\n```\n:::\n\n\n# \n\n## 1. 'Sale_Price' : 판매 가격\n\n::: {#b3f5b730 .cell execution_count=9}\n``` {.python .cell-code}\ntrain_numeric_hist('Sale_Price')\n\nprint(\"최소값 :\", train_df['Sale_Price'].min())\nprint(\"최대값 :\", train_df['Sale_Price'].max())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-10-output-1.png){width=662 height=488}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n최소값 : 12789\n최대값 : 755000\n```\n:::\n:::\n\n\n이상치 있어보임. 100,000\\~200,000 달러가 제일 많아보임.\n\n# \n\n## 2. 'MS_SubClass' : 판매 관련 주택 타입 (1층인지, 2층인지, 언제적 집구조인지, 다세대인지 등등) \\<- 수치컬럼으로 되어 있지만 범주 컬럼임.\n\n::: {#83015064 .cell execution_count=10}\n``` {.python .cell-code}\ntrain_df['MS_SubClass'] = train_df['MS_SubClass'].astype(str)  # 범주 컬럼 처리\ntrain_cat_count('MS_SubClass')\n\ntrain_cat_hist('MS_SubClass')\n\nprint(train_df['MS_SubClass'].value_counts().sort_index())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-11-output-1.png){width=918 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-11-output-2.png){width=672 height=488}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nMS_SubClass\nDuplex_All_Styles_and_Ages                    109\nOne_Story_1945_and_Older                      139\nOne_Story_1946_and_Newer_All_Styles          1079\nOne_Story_PUD_1946_and_Newer                  192\nOne_Story_with_Finished_Attic_All_Ages          6\nOne_and_Half_Story_Finished_All_Ages          287\nOne_and_Half_Story_PUD_All_Ages                 1\nOne_and_Half_Story_Unfinished_All_Ages         18\nPUD_Multilevel_Split_Level_Foyer               17\nSplit_Foyer                                    48\nSplit_or_Multilevel                           118\nTwo_Family_conversion_All_Styles_and_Ages      61\nTwo_Story_1945_and_Older                      128\nTwo_Story_1946_and_Newer                      575\nTwo_Story_PUD_1946_and_Newer                  129\nTwo_and_Half_Story_All_Ages                    23\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n    20  1946년부터 그 이후로 지어진 1층 짜리 최신 집 (1938, 1946~2010년에 지어진 집들임.)\n    30  1945년부터 그 이전으로 지어진 1층 짜리 오래된 집 (1885, 1910~1945, 1948에 지어진 집임.)\n    40  다락방이 있는 1층짜리 집 <- 데이터 4개밖에 없음 (1926,1930,1949,1979)\n    45  2층짜리 집이지만, 삐족한 지붕때문에 2층의 절반은 없는 미완성 집\n    50  2층짜리 집이지만, 삐족한 지붕때문에 2층의 절반은 없는 완성된 집\n    60  1946년부터 그 이후로 지어진 2층 짜리 최신 집 (1946~2009에 지어진 집임)\n    70  1945년부터 그 이전으로 지어진 2층 짜리 오래된 집 (1872~1945에 지어진 집임)\n    75  3층짜리 집이지만, 삐족한 지붕때문에 3층의 절반은 없는 집\n    80  각 층이 엇갈려있는 집\n    85  현관 앞에 계단으로 층이 엇갈려있는 집\n    90  다세대 주택 (한 건물에 집이 나눠져 있고 여러 유닛이 삶)\n   120  1946년부터 그 이후로 지어진 1층짜리 최신 연립주택 그룹 (집이 모여있음)\n   150  2층짜리 집이지만, 삐족한 지붕때문에 2층의 절반은 없는 연립주택 그룹 (집이 모여있음)\n   160  1946년부터 그 이후로 지어진 2층짜리 최신 연립주택 그룹 (집이 모여있음)\n   180  연립주택 그룹 + 각 층이 엇갈림 + 현관 계단 집\n   190  한 집을 두 집으로 개조해서 쪼갠 집\n```\n\n::: {#7708b2f5 .cell execution_count=11}\n``` {.python .cell-code}\ncols = train_df.columns\ntrain_df[train_df['MS_SubClass'] == 20]['Year_Built'].sort_values()  # 'MS_SubClass'=20은 1938, 1946~2010에 지어진 집임\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n```\nSeries([], Name: Year_Built, dtype: int64)\n```\n:::\n:::\n\n\n::: {#7efe2441 .cell execution_count=12}\n``` {.python .cell-code}\ntrain_df[train_df['MS_SubClass'] == 30]['Year_Built'].sort_values()  # 'MS_SubClass'=30은 1885, 1910~1945, 1948에 지어진 집임\n```\n\n::: {.cell-output .cell-output-display execution_count=45}\n```\nSeries([], Name: Year_Built, dtype: int64)\n```\n:::\n:::\n\n\n::: {#4a5c11c0 .cell execution_count=13}\n``` {.python .cell-code}\ntrain_df[train_df['MS_SubClass'] == 60]['Year_Built'].sort_values()  # 'MS_SubClass'=60은 1946~2009에 지어진 집임\n```\n\n::: {.cell-output .cell-output-display execution_count=46}\n```\nSeries([], Name: Year_Built, dtype: int64)\n```\n:::\n:::\n\n\n::: {#f4110e6b .cell execution_count=14}\n``` {.python .cell-code}\ntrain_df[train_df['MS_SubClass'] == 70]['Year_Built'].sort_values()  # 'MS_SubClass'=70은 1872~1945에 지어진 집임\n```\n\n::: {.cell-output .cell-output-display execution_count=47}\n```\nSeries([], Name: Year_Built, dtype: int64)\n```\n:::\n:::\n\n\n::: {#9cea3caf .cell execution_count=15}\n``` {.python .cell-code}\ntrain_df[train_df['MS_SubClass'] == 120]['Year_Built'].sort_values()   # 1976~2009에 지어진 집임.\n```\n\n::: {.cell-output .cell-output-display execution_count=48}\n```\nSeries([], Name: Year_Built, dtype: int64)\n```\n:::\n:::\n\n\n# \n\n## 3. 'MS_Zoning' : 판매 관련 일반 구역 분류 (수상 거주지인지, 밀도가 높은 거주지인지 등)\n\n::: {#08ac253b .cell execution_count=16}\n``` {.python .cell-code}\ntrain_cat_count('MS_Zoning')\ntrain_cat_hist('MS_Zoning')\n\nprint(train_df['MS_Zoning'].value_counts())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-17-output-1.png){width=826 height=489}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-17-output-2.png){width=672 height=488}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nMS_Zoning\nResidential_Low_Density         2273\nResidential_Medium_Density       462\nFloating_Village_Residential     139\nResidential_High_Density          27\nC_all                             25\nI_all                              2\nA_agr                              2\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n   A    농업\n   C    상업\n   FV   수상 거주지\n   I    산업\n   RH   높은 밀도 거주지\n   RL   낮은 밀도 거주지\n   RP   Residential Low Density Park \n   RM  중간 밀도 거주지\n```\n\n=\\> 데이터상 RL, RM, RH, FV, C(all) 만 있음.\\\n빈도를 확인해보면, 제일 많은게 RL(낮은 밀도 거주지)임.\\\n범주별 분포를 보면, 범주마다 집값이 살짝 다른 것 같음. 보라색 분포에 이상치도 존재하는 것 같다.\n\n# \n\n## 4. 'Lot_Frontage' : 집과 연결된 거리의 직선 길이 (feet)\n\n::: {#67929342 .cell execution_count=17}\n``` {.python .cell-code}\ntrain_numeric_hist('Lot_Frontage')\n\ntrain_rel_xy('Lot_Frontage')\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-18-output-1.png){width=687 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-18-output-2.png){width=699 height=488}\n:::\n:::\n\n\n결측치 259개 있음. \\<- 집에 연결된 거리가 없어서 결측치인걸 수도 있음. 그렇다면 0값으로 처리해주기.\\\nLot_Frontage의 분포를 보면 이상치 있어보임. Lot_Frontage과 Sale_Price의 관계를 보면 많이 퍼져있기는한데 이상치를 제외하면 양의 관계가 있는 것 같기도 함.\n\n::: {#2e4fcfa8 .cell execution_count=18}\n``` {.python .cell-code}\ntrain_cat_rel_xy('Lot_Frontage', 'MS_Zoning') # 범주별로 y값과의 관계를 알아봄.\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-19-output-1.png){width=699 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-19-output-2.png){width=621 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-19-output-3.png){width=612 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-19-output-4.png){width=612 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-19-output-5.png){width=612 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-19-output-6.png){width=612 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-19-output-7.png){width=605 height=429}\n:::\n:::\n\n\n::: {#c9053f06 .cell execution_count=19}\n``` {.python .cell-code}\nplt.clf()\nsns.scatterplot(data=train_df, x = 'Lot_Frontage', y='Sale_Price', hue='MS_Zoning')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-20-output-1.png){width=612 height=429}\n:::\n:::\n\n\n::: {#d5863a50 .cell execution_count=20}\n``` {.python .cell-code}\nplt.clf()\nsns.scatterplot(data=train_df, x = 'Lot_Frontage', y='Lot_Area', size='Sale_Price')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-21-output-1.png){width=612 height=429}\n:::\n:::\n\n\n::: {#9c1d2948 .cell execution_count=21}\n``` {.python .cell-code}\ntrain_df['MS_SubClass'] = train_df['MS_SubClass'].astype(str)\nplt.clf()\nsns.scatterplot(data=train_df, x = 'MS_SubClass', y='Neighborhood', size='Sale_Price')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-22-output-1.png){width=900 height=429}\n:::\n:::\n\n\n# \n\n## 5. 'Lot_Area' : 부지 크기 (square feet)\n\n::: {#68eda0c7 .cell execution_count=22}\n``` {.python .cell-code}\ntrain_numeric_hist('Lot_Area')\n\ntrain_rel_xy('Lot_Area')\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-23-output-1.png){width=701 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-23-output-2.png){width=699 height=488}\n:::\n:::\n\n\nLot_Area의 분포를 보면 이상치 있어보임. Lot_Area과 Sale_Price의 관계를 보면 일부의 집 때문에 굉장히 퍼지는 관계임.\n\n::: {#25d4caf6 .cell execution_count=23}\n``` {.python .cell-code}\ntrain_cat_rel_xy('Lot_Area', 'MS_Zoning') # 범주별로 y값과의 관계를 알아봄.\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-24-output-1.png){width=699 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-24-output-2.png){width=612 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-24-output-3.png){width=612 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-24-output-4.png){width=612 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-24-output-5.png){width=612 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-24-output-6.png){width=612 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-24-output-7.png){width=605 height=429}\n:::\n:::\n\n\n# \n\n## 6. 'Street' : 집에 접근 도로 유형 (자갈길인지, 포장길인지)\n\n::: {#dfca8fa4 .cell execution_count=24}\n``` {.python .cell-code}\ntrain_cat_count('Street')\ntrain_cat_hist('Street')\n\nprint(train_df['Street'].value_counts())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-25-output-1.png){width=684 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-25-output-2.png){width=672 height=488}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nStreet\nPave    2918\nGrvl      12\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n   Grvl 자갈길 \n   Pave 포장길\n```\n\n자갈길이 6개밖에 안됨. 범주별 분포를 보면, 포장길에 이상치가 있어보임.\n\n# \n\n## 7. 'Alley' : 집에 접근 골목 유형 (자갈 골목길인지, 포장 골목길인지)\n\n::: {#c9279da0 .cell execution_count=25}\n``` {.python .cell-code}\ntrain_cat_count('Alley')\ntrain_cat_hist('Alley')\n\nprint(train_df['Alley'].value_counts())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-26-output-1.png){width=753 height=489}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-26-output-2.png){width=672 height=488}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nAlley\nNo_Alley_Access    2732\nGravel              120\nPaved                78\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n   Grvl 자갈 골목길\n   Pave 포장된 골목길\n   NA   골목길 없음\n```\n\n1369 결측치 있음. \\<- 이게 다 골목길 없다는 것임. 범주별 분포가 많이 다름. \\<- 범주별로 집 가격 차이가 있을 것임.\n\n# \n\n## 8. 'Lot_Shape' : 일반적인 집 모양 (일반적인 모양인지, 일반적이지 않은 모양인지 등)\n\n::: {#2cafe5e5 .cell execution_count=26}\n``` {.python .cell-code}\ntrain_cat_count('Lot_Shape')\ntrain_cat_hist('Lot_Shape')\n\nprint(train_df['Lot_Shape'].value_counts())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-27-output-1.png){width=780 height=489}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-27-output-2.png){width=672 height=488}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nLot_Shape\nRegular                 1859\nSlightly_Irregular       979\nModerately_Irregular      76\nIrregular                 16\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n   Reg  보통\n   IR1  약간 보통이 아님\n   IR2  중간 정도 보통이 아님\n   IR3  보통이 아님\n```\n\n일반적이지 않은 집이 10개 있음. 이상치에 해당하는 집일 수도...?\\\n범주별 분포가 크게 다른 것 같진 않음. 근데 파란색분포는 살짝 다른 것 같음.\\\n주황색 분포에 이상치가 있어보임.\n\n# \n\n## 9. 'Land_Contour' : 집의 평탄 정도\n\n::: {#53647983 .cell execution_count=27}\n``` {.python .cell-code}\ntrain_cat_count('Land_Contour')\ntrain_cat_hist('Land_Contour')\n\n\nprint(train_df['Land_Contour'].value_counts())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-28-output-1.png){width=678 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-28-output-2.png){width=672 height=488}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nLand_Contour\nLvl    2633\nHLS     120\nBnk     117\nLow      60\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n   Lvl  평평한 것에 가까움  \n   Bnk  기움 - Quick and significant rise from street grade to building\n   HLS  비탈 - Significant slope from side to side\n   Low 움푹한 곳\n```\n\n평평한 것에 가까운게 많음. 범주별 분포 차이가 없어 보임. 파란색 분포에 이상치가 있어보임.\n\n# \n\n## 10. 'Utilities' : 전기, 가스, 수도, 하수도 사용 가능 여부\n\n::: {#2891b150 .cell execution_count=28}\n``` {.python .cell-code}\ntrain_cat_count('Utilities')\n\nplt.clf()\nsns.histplot(train_df[train_df['Utilities']=='AllPub']['Sale_Price'], stat='density')\n#sns.histplot(train_df[train_df['Utilities']=='NoSewr']['Sale_Price'], stat='density')\n#sns.histplot(train_df[train_df['Utilities']=='NoSeWa']['Sale_Price'], stat='density')\n#sns.histplot(train_df[train_df['Utilities']=='ELO']['Sale_Price'], stat='density')\nplt.title('Utilities 범주별, Sale_Price 분포')\nplt.tight_layout()\nplt.show()\n\nprint(train_df['Utilities'].value_counts())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-29-output-1.png){width=706 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-29-output-2.png){width=662 height=469}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nUtilities\nAllPub    2927\nNoSewr       2\nNoSeWa       1\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n   AllPub   전기, 가스, 물, 하수도  \n   NoSewr   전기, 가스, 물 (정화조)\n   NoSeWa   전기, 가스\n   ELO      전기\n```\n\n전기, 가스만 사용가능한 집이 1개만 있고, 그 외에는 모두 사용 가능한 집임. 이상치 존재해 보임.\n\n# \n\n## 11. 'Lot_Config' : 부지 배열 (부지 위치가 안쪽인지, 코너인지, 도로가 몇 개인지 등)\n\n::: {#61452433 .cell execution_count=29}\n``` {.python .cell-code}\ntrain_cat_count('Lot_Config')\n\ntrain_cat_hist('Lot_Config')\n\nprint(train_df['Lot_Config'].value_counts())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-30-output-1.png){width=704 height=489}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-30-output-2.png){width=662 height=488}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nLot_Config\nInside     2140\nCorner      511\nCulDSac     180\nFR2          85\nFR3          14\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n   Inside   안쪽 부지\n   Corner   코너 부지\n   CulDSac  출입하는 길이 하나인 곳\n   FR2      도로.강을 향한 면이 2곳\n   FR3      도로.강을 향한 면이 3곳\n```\n\n범주별로 분포 차이가 없어보임. 초록색, 주황색 분포에 이상치가 있어보임.\n\n# \n\n## 12. 'Land_Slope' : 집 토지 경사 (경사가 약간인지, 심각한지 등)\n\n::: {#d9baee74 .cell execution_count=30}\n``` {.python .cell-code}\ntrain_cat_count('Land_Slope')\ntrain_cat_hist('Land_Slope')\n\nprint(train_df['Land_Slope'].value_counts())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-31-output-1.png){width=683 height=489}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-31-output-2.png){width=672 height=488}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nLand_Slope\nGtl    2789\nMod     125\nSev      16\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n   Gtl  약간 경사\n   Mod  보통 경사\n   Sev  심한 경사\n```\n\n경사가 심하면 건축비용이 많이 든다길래 집값에 차이가 있을 줄 알았는데, 범주별로 분포의 차이가 없어보임. 파란색 분포에 이상치가 있어보임.\n\n# \n\n## 13. 'Neighborhood' : Physical locations within Ames city limits (집 위치)\n\n::: {#6832d9f0 .cell execution_count=31}\n``` {.python .cell-code}\ntrain_cat_count('Neighborhood')\ntrain_cat_hist('Neighborhood')\nplt.clf()\nsns.countplot(data=train_df, x='Neighborhood')\nplt.xticks(rotation = 50)\nplt.show()\n\n\nb = train_df['Neighborhood'].unique()\n\nplt.clf()\nsns.histplot(train_df[train_df['Neighborhood']==b[0]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[1]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[2]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[3]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[4]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[5]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[6]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[7]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[8]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[9]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[10]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[11]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[12]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[13]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[14]]['Sale_Price'], stat='density')\nplt.title('Neighborhood 범주별, Sale_Price 분포')\nplt.show()\n\nprint(train_df['Neighborhood'].value_counts().sort_index())\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-32-output-1.png){width=906 height=489}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-32-output-2.png){width=672 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-32-output-3.png){width=605 height=617}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-32-output-4.png){width=575 height=451}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nNeighborhood\nBloomington_Heights                         28\nBlueste                                     10\nBriardale                                   30\nBrookside                                  108\nClear_Creek                                 44\nCollege_Creek                              267\nCrawford                                   103\nEdwards                                    194\nGilbert                                    165\nGreen_Hills                                  2\nGreens                                       8\nIowa_DOT_and_Rail_Road                      93\nLandmark                                     1\nMeadow_Village                              37\nMitchell                                   114\nNorth_Ames                                 443\nNorthpark_Villa                             23\nNorthridge                                  71\nNorthridge_Heights                         166\nNorthwest_Ames                             131\nOld_Town                                   239\nSawyer                                     151\nSawyer_West                                125\nSomerset                                   182\nSouth_and_West_of_Iowa_State_University     48\nStone_Brook                                 51\nTimberland                                  72\nVeenker                                     24\nName: count, dtype: int64\n```\n:::\n:::\n\n\n```         \n   Blmngtn  Bloomington Heights\n   Blueste  Bluestem\n   BrDale   Briardale\n   BrkSide  Brookside\n   ClearCr  Clear Creek\n   CollgCr  College Creek\n   Crawfor  Crawford\n   Edwards  Edwards\n   Gilbert  Gilbert\n   IDOTRR   Iowa DOT and Rail Road\n   MeadowV  Meadow Village\n   Mitchel  Mitchell\n   Names    North Ames\n   NoRidge  Northridge\n   NPkVill  Northpark Villa\n   NridgHt  Northridge Heights\n   NWAmes   Northwest Ames\n   OldTown  Old Town\n   SWISU    South & West of Iowa State University\n   Sawyer   Sawyer\n   SawyerW  Sawyer West\n   Somerst  Somerset\n   StoneBr  Stone Brook\n   Timber   Timberland\n   Veenker  Veenker\n```\n\n분포 차이가 있는 지역이 있는 것 같음. \\<- 특정 지역은 집값의 차이가 있다고 볼 수 있음. 집값이 비슷한 지역끼리 묶어서 분석해볼 수도 있을 것 같음.\\\n빨간색, 파란색 분포에서 이상치가 있어보임.\\\n보라색, 하늘색, 주황색, 회색, 분홍색 지역은 특정 집값에 몰려있는 것 같음.\\\n집 데이터가 가장 많은 지역은 NridgHt임. 그 다음이 CollgCr임.\n\n::: {#f7713ac4 .cell execution_count=32}\n``` {.python .cell-code}\nplt.clf()\nsns.histplot(train_df[train_df['Neighborhood']==b[0]]['Sale_Price'], stat='density')\nsns.histplot(train_df[train_df['Neighborhood']==b[10]]['Sale_Price'], stat='density')\nplt.title('Neighborhood 범주별, Sale_Price 분포')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-33-output-1.png){width=600 height=451}\n:::\n:::\n\n\n집 데이터가 가장 많은 두 지역을 보면 집값 차이가 큼\n\n\n#\n\n## 14. 'Condition_1' : 다양한 조건에 근접한지 (중요 도로에 근접한지, 공원에 근접한지, 평범한지 등)\n\n::: {#2ffc0a6a .cell execution_count=33}\n``` {.python .cell-code}\ntrain_cat_count('Condition_1')\ntrain_cat_hist('Condition_1')\n\ntrain_df['Condition_1'].value_counts()\n```\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-34-output-1.png){width=692 height=488}\n:::\n\n::: {.cell-output .cell-output-display}\n![](columns_files/figure-html/cell-34-output-2.png){width=679 height=488}\n:::\n\n::: {.cell-output .cell-output-display execution_count=66}\n```\nCondition_1\nNorm      2522\nFeedr      164\nArtery      92\nRRAn        50\nPosN        39\nRRAe        28\nPosA        20\nRRNn         9\nRRNe         6\nName: count, dtype: int64\n```\n:::\n:::\n\n\n       Artery\t    간선도로(도시의 주요지점 연결 도로 - 고속도로, 대로 등)에 인접\n       Feedr     \t2차 도로(고속도로에 들어가기 전 도로 - 보조 도로)에 인접\n       Norm\t        보통\n       RRNn     \tNorth-South Railroad에서 200' 내에 있다.\n       RRAn\t        North-South Railroad에 인접 \n       PosN\t        공원, 그린벨트, 등등 off-site인 곳\n       PosA\t        공원, 그린벨트, 등등 off-site에 인접\n       RRNe\t        East-West Railroad에서 200' 내에 있다.\n       RRAe\t        East-West Railroad에 인접\n\nNorm이 압도적으로 많음. Feedr와 Artery가 다른 조건들보다는 많음.\n\n::: {#f3407901 .cell execution_count=34}\n``` {.python .cell-code}\npd.set_option('display.max_rows',None)\ntrain_df.groupby(['Neighborhood','Condition_1']).agg(id_count=('Id','count'))\n```\n\n::: {.cell-output .cell-output-display execution_count=67}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>id_count</th>\n    </tr>\n    <tr>\n      <th>Neighborhood</th>\n      <th>Condition_1</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Bloomington_Heights</th>\n      <th>Norm</th>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Blueste</th>\n      <th>Norm</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>Briardale</th>\n      <th>Norm</th>\n      <td>30</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Brookside</th>\n      <th>Artery</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Feedr</th>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>78</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>RRAn</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>RRNn</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Clear_Creek</th>\n      <th>Feedr</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">College_Creek</th>\n      <th>Feedr</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>259</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Crawford</th>\n      <th>Artery</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Feedr</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>95</td>\n    </tr>\n    <tr>\n      <th>PosA</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">Edwards</th>\n      <th>Artery</th>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>Feedr</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>174</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">Gilbert</th>\n      <th>Feedr</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>144</td>\n    </tr>\n    <tr>\n      <th>RRAn</th>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>RRNn</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Green_Hills</th>\n      <th>Norm</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Greens</th>\n      <th>Norm</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Iowa_DOT_and_Rail_Road</th>\n      <th>Artery</th>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>Feedr</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>RRAe</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>RRNe</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>RRNn</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Landmark</th>\n      <th>Norm</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Meadow_Village</th>\n      <th>Norm</th>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">Mitchell</th>\n      <th>Artery</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>Feedr</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>109</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">North_Ames</th>\n      <th>Artery</th>\n      <td>29</td>\n    </tr>\n    <tr>\n      <th>Feedr</th>\n      <td>31</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>369</td>\n    </tr>\n    <tr>\n      <th>PosA</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>RRAn</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Northpark_Villa</th>\n      <th>Norm</th>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Northridge</th>\n      <th>Norm</th>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">Northridge_Heights</th>\n      <th>Norm</th>\n      <td>161</td>\n    </tr>\n    <tr>\n      <th>PosA</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Northwest_Ames</th>\n      <th>Feedr</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>92</td>\n    </tr>\n    <tr>\n      <th>PosA</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>RRAn</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>RRNn</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">Old_Town</th>\n      <th>Artery</th>\n      <td>42</td>\n    </tr>\n    <tr>\n      <th>Feedr</th>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>184</td>\n    </tr>\n    <tr>\n      <th>RRAn</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Sawyer</th>\n      <th>Feedr</th>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>99</td>\n    </tr>\n    <tr>\n      <th>PosA</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>RRAe</th>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>RRNe</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">Sawyer_West</th>\n      <th>Feedr</th>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>97</td>\n    </tr>\n    <tr>\n      <th>RRAe</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>RRNe</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Somerset</th>\n      <th>Feedr</th>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>159</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>RRAn</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>RRNn</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">South_and_West_of_Iowa_State_University</th>\n      <th>Artery</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Feedr</th>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">Stone_Brook</th>\n      <th>Norm</th>\n      <td>48</td>\n    </tr>\n    <tr>\n      <th>PosA</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>PosN</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Timberland</th>\n      <th>Norm</th>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>PosA</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Veenker</th>\n      <th>Feedr</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>Norm</th>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#fe844e7c .cell execution_count=35}\n``` {.python .cell-code}\npd.set_option('display.max_rows',None)\ntrain_df.groupby(['Neighborhood','Bedroom_AbvGr']).agg(id_count=('Id','count'))\n```\n\n::: {.cell-output .cell-output-display execution_count=68}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>id_count</th>\n    </tr>\n    <tr>\n      <th>Neighborhood</th>\n      <th>Bedroom_AbvGr</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Bloomington_Heights</th>\n      <th>1</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">Blueste</th>\n      <th>1</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">Briardale</th>\n      <th>2</th>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Brookside</th>\n      <th>1</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>39</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>53</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Clear_Creek</th>\n      <th>0</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">College_Creek</th>\n      <th>1</th>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>211</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Crawford</th>\n      <th>1</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Edwards</th>\n      <th>1</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>93</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>30</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">Gilbert</th>\n      <th>2</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>138</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Green_Hills</th>\n      <th>1</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Greens</th>\n      <th>1</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Iowa_DOT_and_Rail_Road</th>\n      <th>1</th>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>35</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Landmark</th>\n      <th>3</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Meadow_Village</th>\n      <th>1</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Mitchell</th>\n      <th>0</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">North_Ames</th>\n      <th>1</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>117</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>260</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">Northpark_Villa</th>\n      <th>2</th>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">Northridge</th>\n      <th>2</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>43</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Northridge_Heights</th>\n      <th>1</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">Northwest_Ames</th>\n      <th>2</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>80</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>39</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th rowspan=\"7\" valign=\"top\">Old_Town</th>\n      <th>0</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>85</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>90</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Sawyer</th>\n      <th>0</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>105</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Sawyer_West</th>\n      <th>1</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">Somerset</th>\n      <th>1</th>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>109</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th rowspan=\"7\" valign=\"top\">South_and_West_of_Iowa_State_University</th>\n      <th>1</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"6\" valign=\"top\">Stone_Brook</th>\n      <th>0</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">Timberland</th>\n      <th>2</th>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Veenker</th>\n      <th>0</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "columns_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}
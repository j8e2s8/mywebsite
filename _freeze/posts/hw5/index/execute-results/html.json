{
  "hash": "261088979455964c71fca7f19c141c51",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: hw5\nauthor: 정은서\ndate: '2024-07-30'\ncategories:\n  - bigdata\neditor: visual\n---\n\n# 숙제 : 챕터 9-2 설문조사 그래프에서 각 성별 95% 신뢰구간 계산후 그리기. norm.ppf() 사용해서 그릴 것. 모분산은 표본 분산을 사용해서 추정\n\n## 1. 데이터 불러오기\n\n::: {#68f68e02 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nwelfare = pd.read_spss('../../../Doit_Python/Data/Koweps_hpwc14_2019_beta2.sav')\nwelfare.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>h14_id</th>\n      <th>h14_ind</th>\n      <th>h14_sn</th>\n      <th>h14_merkey</th>\n      <th>h_new</th>\n      <th>h14_cobf</th>\n      <th>p14_wsc</th>\n      <th>p14_wsl</th>\n      <th>p14_wgc</th>\n      <th>p14_wgl</th>\n      <th>...</th>\n      <th>wc14_64</th>\n      <th>wc14_65</th>\n      <th>wc14_5aq4</th>\n      <th>wc14_5aq5</th>\n      <th>wc14_5aq6</th>\n      <th>h14_pers_income1</th>\n      <th>h14_pers_income2</th>\n      <th>h14_pers_income3</th>\n      <th>h14_pers_income4</th>\n      <th>h14_pers_income5</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>20101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.291589</td>\n      <td>0.291589</td>\n      <td>1307.764781</td>\n      <td>1307.764781</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>30101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.419753</td>\n      <td>0.419753</td>\n      <td>1882.570960</td>\n      <td>1882.570960</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>40101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.265263</td>\n      <td>0.265980</td>\n      <td>1189.691668</td>\n      <td>1192.908537</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1284.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>60101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.494906</td>\n      <td>0.495941</td>\n      <td>2219.630833</td>\n      <td>2224.273816</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>.</td>\n      <td>2.0</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>2304.0</td>\n      <td>NaN</td>\n      <td>1800.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>60101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>1.017935</td>\n      <td>1.017935</td>\n      <td>4565.389177</td>\n      <td>4565.389177</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>.</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 830 columns</p>\n</div>\n```\n:::\n:::\n\n\n## 2. 필요한 데이터만 가져오기\n\n::: {#c9e56c25 .cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\ndf = welfare[['h14_g3','p1402_8aq1']]\ndf = df.rename(columns = {'h14_g3' : 'sex',\n                           'p1402_8aq1' : 'income' })\ndf = df.dropna(subset='income')\ndf['sex'] = np.where(df['sex'] == 1, 'male', 'female')\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sex</th>\n      <th>income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>male</td>\n      <td>107.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>male</td>\n      <td>192.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>female</td>\n      <td>27.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>female</td>\n      <td>27.0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>male</td>\n      <td>338.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## 3. 신뢰구간 구하기\n\n::: {#cae76e32 .cell execution_count=3}\n``` {.python .cell-code}\nmale_income = df.loc[df['sex']=='male', 'income']\nfemale_income = df.loc[df['sex'] == 'female', 'income']\nmale_bar = male_income.mean()\nfemale_bar = female_income.mean()\nmale_scale = np.sqrt(male_income.var(ddof=1))\nfemale_scale = np.sqrt(female_income.var(ddof=1))\nmale_n = len(male_income)\nfemale_n = len(female_income)\n\nfrom scipy.stats import norm\n\nz0025 = norm.ppf(0.975, loc=0 , scale=1)\nmale_a = male_bar + z0025*male_scale/np.sqrt(male_n)\nmale_b = male_bar - z0025*male_scale/np.sqrt(male_n)\nprint(\"male의 오른쪽 신뢰구간 위치 :\", male_a)\nprint(\"male의 왼쪽 신뢰구간 위치 :\", male_b)\n\nfemale_a = female_bar + z0025*female_scale/np.sqrt(female_n)\nfemale_b = female_bar - z0025*female_scale/np.sqrt(female_n)\nprint(\"female의 오른쪽 신뢰구간 위치 :\", female_a)\nprint(\"female의 왼쪽 신뢰구간 위치 :\", female_b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmale의 오른쪽 신뢰구간 위치 : 357.96254968365116\nmale의 왼쪽 신뢰구간 위치 : 340.11259229974775\nfemale의 오른쪽 신뢰구간 위치 : 191.7557368532799\nfemale의 왼쪽 신뢰구간 위치 : 180.83045468346845\n```\n:::\n:::\n\n\n## 4. groupby로 성별별 평균 income 데이터 만들기\n\n::: {#bd91784a .cell execution_count=4}\n``` {.python .cell-code}\nsex_income = df.groupby('sex', as_index=False).agg(mean_income = ('income','mean'))\nsex_income\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sex</th>\n      <th>mean_income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>female</td>\n      <td>186.293096</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>male</td>\n      <td>349.037571</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## 5. 성별별 평균 income 데이터로 막대그래프 그리고, 신뢰구간 그리기\n\n::: {#9bc6b0e2 .cell execution_count=5}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.clf()\nsns.barplot(data=sex_income , x='sex', y='mean_income')\nplt.plot([0,0], [female_a,female_b], color='red')\nplt.plot([1,1], [male_a, male_b], color='red')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=593 height=429}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}